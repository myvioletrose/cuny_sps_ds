coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(~ destination, ncol = 2, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge", aes(fill = airline)) +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(~ destination, ncol = 2, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge", aes(col = airline)) +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(~ destination, ncol = 2, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 2, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5)
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_grid(airline ~ destination, ncol = 5, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
# facet_wrap(airline ~ destination, ncol = 5, scales = "free")
facet_grid(airline ~ destination, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(~ destination, ncol = 5, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
# facet_wrap(~ destination, ncol = 5, scales = "free")
# facet_grid(airline ~ destination, scales = "free")
facet_grid(airline ~ destination)
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
# facet_wrap(~ destination, ncol = 5, scales = "free")
facet_grid(airline ~ destination, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(~ destination, ncol = 5, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(destination ~ airline, ncol = 5, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5, scales = "free")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
NEF <- c("x: NEFEDIT
Global Governance: NEFGLBGOV
Global Governance video: VIDNEFGG
Trade: NEFTRADE
Trade video: VIDNEFTRD
Finance: NEFFINANCE
Finance video: VIDNEFFIN
Inclusion: NEFINCLUDE
Inclusion video: VIDNEFINCLD
Technology: NEFTECH
Technology video: VIDNEFTECH
Climate and Urbanization: NEFCLIMURB
Climate and Urbanization video: VIDNEFCLIM
")
stringr::str_extract_all(NEF, "^: [[:upper:]].+") %>% unlist
stringr::str_extract_all(NEF, "^\\: [[:upper:]].+") %>% unlist
NEF
NEF <- c("x: NEFEDIT
Global Governance: NEFGLBGOV
Global Governance video: VIDNEFGG
Trade: NEFTRADE
Trade video: VIDNEFTRD
Finance: NEFFINANCE
Finance video: VIDNEFFIN
Inclusion: NEFINCLUDE
Inclusion video: VIDNEFINCLD
Technology: NEFTECH
Technology video: VIDNEFTECH
Climate and Urbanization: NEFCLIMURB
Climate and Urbanization video: VIDNEFCLIM
") %>% unlist
NEF
stringr::str_extract_all(NEF, "^\\: [[:upper:]]+") %>% unlist
NEF <- c("x: NEFEDIT
Global Governance: NEFGLBGOV
Global Governance video: VIDNEFGG
Trade: NEFTRADE
Trade video: VIDNEFTRD
Finance: NEFFINANCE
Finance video: VIDNEFFIN
Inclusion: NEFINCLUDE
Inclusion video: VIDNEFINCLD
Technology: NEFTECH
Technology video: VIDNEFTECH
Climate and Urbanization: NEFCLIMURB
Climate and Urbanization video: VIDNEFCLIM
") %>% paste0(., collapse = T)
NEF <- c("x: NEFEDIT
Global Governance: NEFGLBGOV
Global Governance video: VIDNEFGG
Trade: NEFTRADE
Trade video: VIDNEFTRD
Finance: NEFFINANCE
Finance video: VIDNEFFIN
Inclusion: NEFINCLUDE
Inclusion video: VIDNEFINCLD
Technology: NEFTECH
Technology video: VIDNEFTECH
Climate and Urbanization: NEFCLIMURB
Climate and Urbanization video: VIDNEFCLIM
") %>% paste(., collapse = T)
NEF <- c("x: NEFEDIT
Global Governance: NEFGLBGOV
Global Governance video: VIDNEFGG
Trade: NEFTRADE
Trade video: VIDNEFTRD
Finance: NEFFINANCE
Finance video: VIDNEFFIN
Inclusion: NEFINCLUDE
Inclusion video: VIDNEFINCLD
Technology: NEFTECH
Technology video: VIDNEFTECH
Climate and Urbanization: NEFCLIMURB
Climate and Urbanization video: VIDNEFCLIM
")
stringr::str_extract_all("x: NEFEDIT", "^\\: [[:upper:]]+") %>% unlist
stringr::str_extract_all("x: NEFEDIT", "\\: [[:upper:]]+") %>% unlist
stringr::str_extract_all(NEF, "\\: [[:upper:]]+") %>% unlist
stringr::str_extract_all(NEF, "\\: [[:upper:]]+") %>% unlist %>%
gsub(": ", "", x = .)
stringr::str_extract_all(NEF, "\\: [[:upper:]]+") %>% unlist %>%
gsub(": ", "", x = .) %>%
cat
stringr::str_extract_all(NEF, "\\: [[:upper:]]+") %>% unlist %>%
gsub(": ", "", x = .) -> out
data.frame(out)
dfTidy
dfTidy <- df %>%
tidyr::gather(., destination, flights,
one_of(c("Los Angeles", "Phoenix", "San Diego", "San Francisco", "Seattle"))) %>%
dplyr::group_by(airline, status, destination) %>%
dplyr::mutate(flights_total = sum(flights)) %>%
ungroup %>%
dplyr::arrange(airline, status, desc(flights))
dfTidy
dfTidy <- df %>%
tidyr::gather(., destination, flights,
one_of(c("Los Angeles", "Phoenix", "San Diego", "San Francisco", "Seattle"))) %>%
dplyr::group_by(airline, destination) %>%
dplyr::mutate(flights_total = sum(flights)) %>%
ungroup %>%
dplyr::arrange(airline, status, desc(flights))
dfTidy
dfTidy
305 + 1841
102 + 503
61 + 201
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(~ destination, ncol = 5, scales = "free_y")
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations (in percentage") +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~ destination, ncol = 5, scales = "free_y")
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations (in percentage)") +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~ destination, ncol = 5, scales = "free_y")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
# Flight Status by Airlines and 5 Destinations
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap( ~ destination, ncol = 5, scales = "free_y")
ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations (in percentage)") +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~ destination, ncol = 5, scales = "free_y")
################
library(gridExtra)
plot1 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap( ~ destination, ncol = 5, scales = "free_y")
# facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
# facet_grid(airline ~ destination, scales = "free")
plot2 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations (in percentage)") +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~ destination, ncol = 5, scales = "free_y")
grid.arrange(plot1, plot2, ncol = 1)
plot1 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap( ~ destination, ncol = 5)
plot2 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations (in percentage)") +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~ destination, ncol = 5, scales = "free_y")
grid.arrange(plot1, plot2, ncol = 1)
plot1 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap( ~ destination, ncol = 5)
# facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
# facet_grid(airline ~ destination, scales = "free")
plot2 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations (in percentage)") +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~ destination, ncol = 5)
grid.arrange(plot1, plot2, ncol = 1)
dfTidy
dfTidy <- df %>%
tidyr::gather(., destination, flights,
one_of(c("Los Angeles", "Phoenix", "San Diego", "San Francisco", "Seattle"))) %>%
dplyr::group_by(airline, destination) %>%
dplyr::mutate(flights_total = sum(flights),
percent_by_destination = flights / flights_total) %>%
ungroup %>%
dplyr::arrange(airline, status, desc(flights))
dfTidy
plot1 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap( ~ destination, ncol = 5)
# facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
# facet_grid(airline ~ destination, scales = "free")
plot2 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations (in percentage)") +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~ destination, ncol = 5)
grid.arrange(plot1, plot2, ncol = 1)
plot1 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap( ~ destination, ncol = 5)
# facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
# facet_grid(airline ~ destination, scales = "free")
plot2 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations (in percentage)") +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~ destination, ncol = 5)
grid.arrange(plot1, plot2, ncol = 1)
df <- raw[-3, ] %>% rename("airline" = X1, "status" = X2)
df[2, 1] <- "ALASKA"
df[4, 1] <- "AM WEST"
dfTidy <- df %>%
tidyr::gather(., destination, flights,
one_of(c("Los Angeles", "Phoenix", "San Diego", "San Francisco", "Seattle"))) %>%
dplyr::group_by(airline, destination) %>%
dplyr::mutate(flights_total = sum(flights),
percent_by_destination = flights / flights_total) %>%
ungroup %>%
dplyr::arrange(airline, status, desc(flights))
dfTidy
dfTidy
install.packages("readit")
install.packages("gridExtra")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readit)
library(gridExtra)
setwd("../"); setwd("data")
raw <- readit::readit("raw_data.csv")
raw
df <- raw[-3, ] %>% rename("airline" = X1, "status" = X2)
df[2, 1] <- "ALASKA"
df[4, 1] <- "AM WEST"
dfTidy <- df %>%
tidyr::gather(., destination, flights,
one_of(c("Los Angeles", "Phoenix", "San Diego", "San Francisco", "Seattle"))) %>%
dplyr::group_by(airline, destination) %>%
dplyr::mutate(flights_total = sum(flights),
percent_by_destination = flights / flights_total) %>%
ungroup %>%
dplyr::arrange(airline, status, desc(flights))
dfTidy
plot1 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "dodge") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations") +
facet_wrap( ~ destination, ncol = 5)
# facet_wrap(airline ~ destination, ncol = 5, scales = "free_y")
# facet_grid(airline ~ destination, scales = "free")
plot2 <- ggplot(dfTidy, aes(x = airline, y = flights, fill = status)) +
geom_bar(stat = "identity", position = "fill") +
# coord_flip() +
theme(legend.position = "top") +
labs(x = "", y = "") +
theme_bw() +
ggtitle("Flight Status by Airlines and 5 Destinations (in percentage)") +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~ destination, ncol = 5)
grid.arrange(plot1, plot2, ncol = 1)
