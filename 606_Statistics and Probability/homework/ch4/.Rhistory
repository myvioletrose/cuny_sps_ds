lapply(1:length(df[[1]]), function(x) {
str_split(unlist(df)[x], "")[[1]][1]
})
sapply(1:length(df[[1]]), function(x) {
str_split(unlist(df)[x], "")[[1]][1]
})
library(purrr)
ls(pos = "package:purrr")
m <- c(1, 2, 3, -4)
reduce(m, *)
reduce(m, "*")
accumulate(m, "*")
accumulate(m, "+")
m <- c(1, 2, 3, -4)
m
?accumulate
accumulate(m, `+`)
reduce(m, `*`)
palindrome <- function(s){
s <- str_replace_all(s, pattern = " ", replacement = "") %>%
str_split("") %>%
unlist
s == s[length(s):1]
}
palindrome('helleh')
library(stringr)
palindrome <- function(s){
s <- str_replace_all(s, pattern = " ", replacement = "") %>%
str_split("") %>%
unlist
s == s[length(s):1]
}
palindrome('helleh')
palindrome <- function(s){
s <- str_replace_all(s, pattern = " ", replacement = "") %>%
str_split("") %>%
unlist
all(s == s[length(s):1])
}
palindrome('helleh')
palindrome('helleh!')
map(c('helleh', 'nurses run'), palindrom)
map(c('helleh', 'nurses run'), palindrome)
map_dbl(c('helleh', 'nurses run'), palindrome)
map_dbl(c('helleh!', 'nurses run'), palindrome)
map_dbl(c('helleh', 'nurses run'), palindrome)
s <- 'I am Batman'
s <- str_to_lower(s) %>%
str_replace_all(pattern = " ", replacement = "") %>%
str_split("") %>%
unlist
s
s %in% letters
letters %in% s
all(letters %in% s)
ispangram <- function(s){
s <- str_to_lower(s) %>%
str_replace_all(pattern = " ", replacement = "") %>%
str_split("") %>%
unlist
all(letters %in% s)
}
ispangram("The quick brown fox jumps over the lazy dog")
remove.packages("httpuv")
.libPaths()
devtools::install_github("jbryer/DATA606")
df <- read.table("clipboard",
sep = '\t', comment.char = "", header = T,
stringsAsFactors = F, fill = T,
quote = "\n", allowEscapes = T
)
head(df)
df <- read.table("clipboard",
sep = '\t', comment.char = "", header = T,
stringsAsFactors = F, fill = T,
quote = "\n", allowEscapes = T
)
head(df)
length(df$value)
df
df$odds[2]
df$value[1]
for (i in 1:length(df$value)){
print( paste0("Financial Advisors are ", round(df$odds[i], 2), " more likely to be interested in ", df$value[i]) )
}
library(broom)
ls(pos = "package:broom")
?inflate
data("mtcars")
head(mtcars)
boxplot(mpg)
boxplot(mpg, data = mtcars)
boxplot(mtcars$mpg, data = mtcars)
attach(mtcars)
sapply(mtcars, unique)
?crossing
library(broom)
?crossing
boxplot(mtcars$mpg, data = mtcars)
IQR(mpg)
boxplot(mtcars$mpg ~ vs, data = mtcars)
IQR(mpg ~ vs)
sapply(c(mpg, wt), IQR)
sapply(mtcars[, c(mpg, wt)], IQR)
mtcars[, c(mpg, wt)]
mtcars[, c("mpg", "wt")]
sapply(mtcars[, c("mpg", "wt")], IQR)
sapply(mtcars[, c("mpg", "wt")], IQR)
par(mar = c(1, 2))
par(mfrow = c(1, 2))
boxplot(mpg, col = 'red')
boxplot(wt, col = 'blue')
sapply(mtcars[, c("mpg", "wt")], IQR)
sapply(mtcars, unique)
sapply(mtcars, length(unique))
sapply(mtcars, function(x) length(unique(x)))
crossing(cyl, vs)
broom::crossing(cyl, vs)
search()
?crossing
library(tidyr)
tidyr::crossing(cyl, vs)
expand.grid(cyl, vs)
dim(mtcars)
df <- expand.grid(cyl, vs)
dim(df)
head9df
head(df)
sapply(df, unique)
df$combo <- paste(df$var1, df$Var2)
head(df)
df$combo <- paste(df$Var1, df$Var2)
head(df)
sapply(df, unique)
table(df$combo)
df$combo <- paste(df$Var1, df$Var2, sep = "-")
table(df$combo)
table(cyl, vs)
sapply(mtcars, function(x) length(unique(x)))
tidyr::crossing(cyl, vs)
?crossing
?plot
library(DATA606)
shiny_demo('DualScales', package = 'DATA606')
library(rlang)
library(ggplot2)
library(ggplot2)
shiny_demo('DualScales', package = 'DATA606')
install.packages('widyr')
library(widyr)
?pairwise_similarity
?inner_join
data(breslow.dat, package = "robust")
install.packages("robust"); library(robust)
data(breslow.dat, package = "robust")
attach(brewslow.dat)
fit <- glm(SumY ~ Base + Age + Trt, data = brewslow.dat, family = poisson())
summary(fit)
attach(brewslow.dat)
data(breslow.dat, package = "robust")
ls()
head(breslow.dat)
attach(breslow.dat)
fit <- glm(SumY ~ Base + Age + Trt, data = breslow.dat, family = poisson())
summary(fit)
fit <- glm(sumY ~ Base + Age + Trt, data = breslow.dat, family = poisson())
summary(fit)
?predict
?base::predict
summary(breslow.dat)
summary(breslow.dat)
head(breslow.dat)
ob <- data.frame(Base = c(22, 41), Age = c(30, 40), Trt = c("placebo", "progabide"))
predict(fit, ob)
ob <- data.frame(Base = c(20, 20), Age = c(30, 40), Trt = c("placebo", "progabide"))
predict(fit, ob)
exp(coef(fit))
1.023 ^ 10
ob <- data.frame(Base = c(20, 20), Age = c(30, 40), Trt = c("placebo", "placebo"))
predict(fit, ob)
1.0229102 ^ 20 + 1.0230007 ^ 40 + 0.8583864
(1.0229102 ^ 20) * (1.0230007 ^ 40) * 0.8583864
(1.0229102 ^ 20) * (1.0230007 ^ 40) * 1 / 0.8583864
(1.0229102 ^ 20) * (1.0230007 ^ 40) * 1
ob <- data.frame(Base = c(20, 20), Age = c(30, 40), Trt = c("progabide", "progabide"))
predict(fit, ob)
(1.0229102 ^ 20) * (1.0230007 ^ 40) * 0.8583864
(1.0229102 ^ 20) + (1.0230007 ^ 40) + 0.8583864
ob <- data.frame(Base = c(20, 20), Age = c(30, 40), Trt = c("progabide", "progabide"))
predict(fit, ob)
exp(coef(fit))
7.0204403 * (1.0229102 ^ 20) * (1.0230007 ^ 40) * 0.8583864
exp(predict(fit, ob))
exp(0.8583864)
coef(fit)
exp(1.94882593 * (0.02265174 ^ 20) * (0.02274013 ^ 40) * -0.15270095)
1.94882593 * (0.02265174 ^ 20) * (0.02274013 ^ 40) * -0.15270095
exp(1.94882593 * (0.02265174 ^ 20) * (0.02274013 ^ 40) * -0.15270095)
exp(1.94882593) * exp(0.02265174 ^ 20) * exp(0.02274013 ^ 40) * exp(-0.15270095)
exp(1.94882593 * (0.02265174 ^ 20) * (0.02274013 ^ 40) * -0.15270095)
7.0204403 * (1.0229102 ^ 20) * (1.0230007 ^ 40) * 0.8583864
exp(predict(fit, ob))
7.0204403 * (1.0229102 ^ 20) * (1.0230007 ^ 40) * 0.8583864
ob <- data.frame(Base = c(20, 20), Age = c(30, 30), Trt = c("placebo", "progabide"))
exp(predict(fit, ob))
(21.84 - 18.75) / 21.84
library(tidyverse)
library(Rcpp)
library(dplyr)
update.packages()
library(DATA606)
library(tidyverse)
update.packages()
quit
quit()
library(tidyverse)
remove.packages("Rcpp")
install.packages("Rcpp")
library(tidyverse)
library(DATA606)
install.packages("digest")
library(DATA606)
library(dplyr)
remove.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("Rcpp",  dependencies = TRUE, repos = "http://cran.us.r-project.org")
install.packages("Rcpp", dependencies = TRUE, repos = "http://cran.us.r-project.org")
install.packages("yaml", dependencies = T)
library(dplyr)
install.packages("purrr")
library(purrr)
library(dplyr)
ls(pos = "package:dplyr")
library(dplyr)
library(DATA606)
install.packages("later")
library(DATA606)
library(Rcpp)
library(DATA606)
install.packages("later")
install.packages("later", dependencies = T)
install.packages("later", dependencies = T, TRUE)
install.packages("installr") # install
install.packages("installr") # install
installr::updateR(T) # updating R.
quit()
choose(240, 2)
setwd("C:/Users/traveler/Desktop/SPS/606_Statistics and Probability/homework/ch4")
177.8 - 163.8
?t.test
t.test(rnorm(n = 507, mean = 171.1, sd = 9.4),
180,
"greater")
t.test(rnorm(n = 507, mean = 171.1, sd = 9.4),
mu = 180,
"greater")
rnorm(n = 507, mean = 171.1, sd = 9.4)
t.test(rnorm(n = 507, mean = 171.1, sd = 9.4),
mu = 180,
alt = "greater")
t.test(rnorm(n = 507, mean = 171.1, sd = 9.4),
mu = 180,
alt = "less")
t.test(rnorm(n = 507, mean = 171.1, sd = 9.4),
mu = 180,
alt = "greater")
(180 - 171.1) / 9.4
(155 - 171.1) / 9.4
9.4 / sqrt(507)
84.71 + 4.4
84.71 - 4.4
(30.69 - 32) / 4.31
(118.2 - 100) / 6.5
118.2 - 1.64(6.5/sqrt(36))
1.64*(6.5/sqrt(36))
118.2 - 1.64*(6.5/sqrt(36))
118.2 + 1.64*(6.5/sqrt(36))
mu = 10000
sd = 1000
pnorm(q = 10500, mu, sd``)
pnorm(q = 10500, mu, sd)
pnorm(q = 10500, mu, sd, lower.tail = F)
knitr::opts_chunk$set(echo = TRUE)
# (a)
mu = 10000; sd = 1000
print(paste("(a) The probability of a randomly chosen light bulb that lasts more than 10500 hours is approximately ",
round(100 * pnorm(q = 10500, mu, sd, lower.tail = F), 2),
"%",
sep = ""))
lightBulb15 <- rnorm(n = 15, mu, sd)
set.seed(123)
lightBulb15 <- rnorm(n = 15, mu, sd)
windows()
hist(lightBulb15)
summary(lightBulb15); hist(lightBulb15)
# (a)
mu = 10000; sd = 1000
print(paste("(4.40a) The probability of a randomly chosen light bulb that lasts more than 10500 hours is approximately ",
round(100 * pnorm(q = 10500, mu, sd, lower.tail = F), 2),
"%",
sep = ""))
# (b)
set.seed(123)
lightBulb15 <- rnorm(n = 15, mu, sd)
summary(lightBulb15); hist(lightBulb15)
# (a)
mu = 10000; sd = 1000
print(paste("(4.40a) The probability of a randomly chosen light bulb that lasts more than 10500 hours is approximately ",
round(100 * pnorm(q = 10500, mu, sd, lower.tail = F), 2),
"%\n",
sep = ""))
# (b)
set.seed(123)
lightBulb15 <- rnorm(n = 15, mu, sd)
summary(lightBulb15); hist(lightBulb15)
# (a)
mu = 10000; sd = 1000
print(paste("(4.40a) The probability of a randomly chosen light bulb that lasts more than 10500 hours is approximately ",
round(100 * pnorm(q = 10500, mu, sd, lower.tail = F), 2),
"%\n\n",
sep = ""))
# (b)
set.seed(123)
lightBulb15 <- rnorm(n = 15, mu, sd)
summary(lightBulb15); hist(lightBulb15)
# (a)
mu = 10000; sd = 1000
print(paste("(4.40a) The probability of a randomly chosen light bulb that lasts more than 10500 hours is approximately ",
round(100 * pnorm(q = 10500, mu, sd, lower.tail = F), 2),
"%",
sep = ""))
# (b)
set.seed(123)
lightBulb15 <- rnorm(n = 15, mu, sd)
summary(lightBulb15); hist(lightBulb15)
sum(lightBulb15 > 10500)
sum(lightBulb15 > 10500) / 15
simulation <- function(var, iteration = 5000, size = 50, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean(sample(var, size)))
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
sample_means15 <- simulation(lightBulb15, iteration = 5000, size = 15, seed = 1234)
sum(sample_means15 > 10500) / 5000
sum(sample_means15 > 10500)
sample_means15
sample_means15 <- simulation(rnorm(n = 1000, mu, sd), iteration = 5000, size = 15, seed = 1234)
sample_means15 <- simulation(rnorm(n = 10000, mu, sd), iteration = 1000, size = 15, seed = 1234)
sum(sample_means15 > 10500) / 5000
sum(sample_means15 > 10500) / 1000
length(sample_means15)
mu = 10000
sd = 1000
sample_means15 <- simulation(rnorm(n = 10000, mu, sd), iteration = 1000, size = 15, seed = 1234)
sum(sample_means15 > 10500) / 1000
simulation <- function(var, iteration = 5000, size = 50, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean(sample(var, size)))
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
sample_means15 <- simulation(rnorm(n = 10000, mu, sd), iteration = 1000, size = 15, seed = 1234)
sum(sample_means15 > 10500)
# (a)
mu = 9000; sd = 1000
print(paste("(4.40a) The probability of a randomly chosen light bulb that lasts more than 10500 hours is approximately ",
round(100 * pnorm(q = 10500, mu, sd, lower.tail = F), 2),
"%",
sep = ""))
# (a)
mu = 9000; sd = 1000
print(paste("(4.40a) The probability of a randomly chosen light bulb that lasts more than 10500 hours is approximately ",
round(100 * pnorm(q = 10500, mu, sd, lower.tail = F), 2),
"%",
sep = ""))
# (b)
set.seed(123)
lightBulb15 <- rnorm(n = 15, mu, sd)
summary(lightBulb15); hist(lightBulb15)
simulation <- function(var, iteration = 5000, size = 50, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean(sample(var, size)))
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
mu = 9000
sd = 1000
sample_means15 <- simulation(rnorm(n = 10000, mu, sd), iteration = 1000, size = 15, seed = 1234)
sum(sample_means15 > 10500) / 1000
# (a)
mu = 9000; sd = 1000
print(paste("(4.40a) The probability of a randomly chosen light bulb that lasts more than 10500 hours is approximately ",
round(100 * pnorm(q = 10500, mu, sd, lower.tail = F), 2),
"%",
sep = ""))
hist(sample_means15)
windows()
sample_means15 <- simulation(rnorm(n = 10000, mu, sd), iteration = 1000, size = 15, seed = 123)
sum(sample_means15 > 10500) / 1000
sample_means15 <- simulation(rnorm(n = 10000, mu, sd), iteration = 100, size = 15, seed = 123)
sum(sample_means15 > 10500) / 1000
mu = 9000
sd = 1000
sample_means15 <- simulation(rnorm(n = 1000, mu, sd), iteration = 100, size = 15, seed = 123)
sum(sample_means15 > 10500) / 1000
sample_means15 <- simulation(rnorm(n = 1000, mu, sd), iteration = 1000, size = 15, seed = 123)
sum(sample_means15 > 10500) / 1000
sample_means15 <- simulation(rnorm(n = 1000, mu, sd), iteration = 1000, size = 15, seed = 123)
sum(sample_means15 > 10500) / 1000
hist(sample_means15)
windows()
simulation <- function(var, iteration = 5000, size = 50, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean(sample(var, size)))
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
sample_means15 <- simulation(rnorm(n = 1000, mu, sd), iteration = 1000, size = 15, seed = 123)
sum(sample_means15 > 10500) / 1000
hist(sample_means15)
# (c)
simulation <- function(var, iteration = 5000, size = 50, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean(sample(var, size)))
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
sample_means15 <- simulation(rnorm(n = 1000, mu, sd), iteration = 1000, size = 15, seed = 123)
sum(sample_means15 > 10500) / 1000
hist(sample_means15)
print(paste("(4.40c) The probability that the mean lifespan of 15 randomly chosen life bulbs last more than 10500 hours is equal to ",
sum(sample_means15 > 10500) / 1000,
".",
sep = ""))
# (c)
simulation <- function(var, iteration = 5000, size = 50, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean(sample(var, size)))
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
sample_means15 <- simulation(rnorm(n = 1000, mu, sd), iteration = 1000, size = 15, seed = 123)
above10500 <- sum(sample_means15 > 10500) / 1000
hist(sample_means15)
print(paste("(4.40c) The probability that the mean lifespan of 15 randomly chosen life bulbs last more than 10500 hours is approximately ",
above10500,
".",
sep = ""))
# (c)
simulation <- function(var, iteration = 5000, size = 50, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean(sample(var, size)))
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
sample_means15 <- simulation(rnorm(n = 1000, mu, sd), iteration = 1000, size = 15, seed = 123)
above10500 <- sum(sample_means15 > 10500) / 1000
hist(sample_means15)
print(paste("(4.40c) The probability that the mean lifespan of 15 randomly chosen life bulbs last more than 10500 hours is approximately ",
above10500,
".",
sep = ""))
windows()
par(mfrow = c(1, 2))
hist(rnorm(1000, mu, sd, main = "Population"))
hist(sample_means15, main = "Sampling Distribution")
hist(rnorm(1000, mu, sd), main = "Population")
par(mfrow = c(1, 2))
hist(rnorm(1000, mu, sd), main = "Population")
hist(sample_means15, main = "Sampling Distribution")
hist(rnorm(1000, mu, sd), main = "Population", breaks = 20)
hist(sample_means15, main = "Sampling Distribution", breaks = 20)
# (d)
par(mfrow = c(1, 2))
hist(rnorm(1000, mu, sd), main = "Population", breaks = 20)
hist(sample_means15, main = "Sampling Distribution", breaks = 20)
# (d)
par(mfrow = c(1, 2))
hist(rnorm(1000, mu, sd), main = "Population", breaks = 20)
hist(sample_means15, main = "Sampling Distribution", breaks = 20)
