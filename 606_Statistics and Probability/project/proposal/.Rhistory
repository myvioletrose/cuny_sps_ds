str(df)
now() %>% weekdays()
?weekdays
?wdays
?wday
# change "date": turn the release_date column as date datat type; add release day, month, year
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
lubridate::wday(now(),
week_start = getOption("lubridate.week.start", 1))
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
View(df)
myfile <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018-10-23/movie_profit.csv"
df <- readr::read_csv(myfile)
############
# clean-up #
############
# check duplication: is there any movie that's duplicated in this data set?
plyr::count(df, "movie") %>%
filter(freq >1)
# what is this movie?
df %>%
filter(movie == "Tau ming chong") %>%
print
# let's remove either one of the rows
df <- df %>%
filter(X1 != 2974)
# is there any movie that has 0 or even negative domestic/worldwide gross?
df %>%
filter(domestic_gross <=0 | worldwide_gross <= 0)
df$domestic_flag <- ifelse(df$domestic_gross <=0, 0, 1); sum(df$domestic_flag)
df$worldwide_flag <- ifelse(df$worldwide_gross <=0, 0, 1); sum(df$worldwide_flag)
# let's rename the X1 column and rename it as a movie id column
names(df)[1] <- "movie_id"
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
View(df)
df
# rescale the production_budget, domestic_gross & worldwide_gross (by dividing 1 million)
# so that they are easier to read
df <- df %>%
mutate(production_budget = production_budget / 1000000,
domestic_gross = domestic_gross / 1000000,
worldwide_gross = worldwide_gross / 1000000)
View(df)
str(df)
unique(df$distributor)
unique(df$mpaa_rating)
?as.factor
unique(df$genre)
# make "factor" for mpaa_rating & genre
df <- df %>%
mutate(mpaa_rating = as.factor(mpaa_rating,
levels = c("G", "PG", "PG-13", "R")),
genre = as.factor(genre))
# make "factor" for mpaa_rating & genre
df <- df %>%
mutate(mpaa_rating = factor(mpaa_rating,
levels = c("G", "PG", "PG-13", "R")),
genre = as.factor(genre))
View(df)
str(df)
summary(df$mpaa_rating)
levels(df$mpaa_rating)
levels(df$genre)
# complete.cases - remove all NA's
dfComplete <- df %>%
complete.cases
# head, dim, str
head(dfComplete)
dim(dfComplete)
?complete.cases
complete.cases(df) %>% head
df[complete.cases(df), ] %>% head
# complete.cases - remove all NA's
dfComplete <- df[complete.cases(df), ]
# head, dim, str
head(dfComplete)
dim(dfComplete)
str(dfComplete)
rm(list = ls())
myfile <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018-10-23/movie_profit.csv"
df <- readr::read_csv(myfile)
###################
### have a look ###
###################
# head, dim, str
head(df)
dim(df)
str(df)
plyr::count(df, "movie") %>%
filter(freq >1)
# what is this movie?
df %>%
filter(movie == "Tau ming chong") %>%
print
# id == 2974, 2975
# let's remove either one of the rows
df <- df %>%
filter(X1 != 2974)
# is there any movie that has 0 or even negative domestic/worldwide gross?
df %>%
filter(domestic_gross <=0 | worldwide_gross <= 0)
# there are 66 of these in this data set
# let's not remove them but create a flag for each of these variables
df$domestic_flag <- ifelse(df$domestic_gross <=0, 0, 1); sum(df$domestic_flag)
df$worldwide_flag <- ifelse(df$worldwide_gross <=0, 0, 1); sum(df$worldwide_flag)
# let's rename the X1 column and rename it as a movie id column
names(df)[1] <- "movie_id"
# change "date": turn the release_date column as date data type; add release day, month, year
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
# rescale the production_budget, domestic_gross & worldwide_gross (by dividing 1 million)
# so that they are easier to read
df <- df %>%
mutate(production_budget = production_budget / 1000000,
domestic_gross = domestic_gross / 1000000,
worldwide_gross = worldwide_gross / 1000000)
# make "factor" for mpaa_rating & genre
df <- df %>%
mutate(mpaa_rating = factor(mpaa_rating,
levels = c("G", "PG", "PG-13", "R")),
genre = as.factor(genre))
# complete.cases - remove all NA's
dfComplete <- df[complete.cases(df), ]
# head, dim, str
head(dfComplete)
dim(dfComplete)  # [1] 3230   14
str(dfComplete)
View(df)
lm(worldwide_gross ~ ., data = dfComplete %>% filter(worldwide_flag == 1), )
df_lm <- lm(worldwide_gross ~ ., data = dfComplete %>% filter(worldwide_flag == 1))
summary(df_lm)
rm(df_lm)
str(df)
df_lm <- lm(worldwide_gross ~ production_budget + mpaa_rating + genre + release_month
, data = dfComplete %>% filter(worldwide_flag == 1))
summary(df_lm)
quit
quit()
setwd("C:/Users/traveler/Desktop/SPS/606_Statistics and Probability/project/proposal")
ls()
dir9)
dir()
# load packages
library(plyr)
library(lubridate)
library(tidyverse)
myfile <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018-10-23/movie_profit.csv"
df <- readr::read_csv(myfile)
###################
### have a look ###
###################
# head, dim, str
head(df)
dim(df)  # [1] 3401    9
str(df)
############
# clean-up #
############
# check duplication: is there any movie that's duplicated in this data set?
plyr::count(df, "movie") %>%
filter(freq >1)
# what is this movie?
df %>%
filter(movie == "Tau ming chong") %>%
print
df <- df %>%
filter(X1 != 2974)
# is there any movie that has 0 or even negative domestic/worldwide gross?
df %>%
filter(domestic_gross <=0 | worldwide_gross <= 0)
df$domestic_flag <- ifelse(df$domestic_gross <=0, 0, 1); sum(df$domestic_flag)
df$worldwide_flag <- ifelse(df$worldwide_gross <=0, 0, 1); sum(df$worldwide_flag)
names(df)[1] <- "movie_id"
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
df <- df %>%
mutate(production_budget = production_budget / 1000000,
domestic_gross = domestic_gross / 1000000,
worldwide_gross = worldwide_gross / 1000000)
# change mpaa_rating & genre to be factor
df <- df %>%
mutate(mpaa_rating = factor(mpaa_rating,
levels = c("G", "PG", "PG-13", "R")),
genre = as.factor(genre))
# complete.cases - remove all NA's
dfComplete <- df[complete.cases(df), ]
# let's look at the clean data set again
head(dfComplete)
dim(dfComplete)  # [1] 3230   14
str(dfComplete)
# {r setup, eval = T, echo = TRUE, results = 'hide', warning = FALSE, message = FALSE}
# load packages
library(plyr)
library(lubridate)
library(tidyverse)
# load file from github
# source form tidytuesday - they have a new dataset coming out every Tuesday
myfile <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018-10-23/movie_profit.csv"
df <- readr::read_csv(myfile)
###################
### have a look ###
###################
# head, dim, str
head(df)
dim(df)  # [1] 3401    9
str(df)
############
# clean-up #
############
# check duplication: is there any movie that's duplicated in this data set?
plyr::count(df, "movie") %>%
filter(freq >1)
# what is this movie?
df %>%
filter(movie == "Tau ming chong") %>%
print
# id == 2974, 2975
# let's remove either one of these identical rows
df <- df %>%
filter(X1 != 2974)
# is there any movie that has 0 or even negative domestic/worldwide gross?
df %>%
filter(domestic_gross <=0 | worldwide_gross <= 0)
# there are 66 of these in this data set (as of Oct 29) - some of them have not been released yet, like the Aquaman!
# let's not remove them but create a flag for each of these variables
df$domestic_flag <- ifelse(df$domestic_gross <=0, 0, 1); sum(df$domestic_flag)
df$worldwide_flag <- ifelse(df$worldwide_gross <=0, 0, 1); sum(df$worldwide_flag)
# let's rename the X1 column and rename it as a movie id column
names(df)[1] <- "movie_id"
# change "date": turn the release_date column as date data type; add release day, month, year
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
# rescale the production_budget, domestic_gross & worldwide_gross (by dividing 1 million)
# so that they are easier to read
df <- df %>%
mutate(production_budget = production_budget / 1000000,
domestic_gross = domestic_gross / 1000000,
worldwide_gross = worldwide_gross / 1000000)
# change mpaa_rating & genre to be factor
df <- df %>%
mutate(mpaa_rating = factor(mpaa_rating,
levels = c("G", "PG", "PG-13", "R")),
genre = as.factor(genre))
# complete.cases - remove all NA's
dfComplete <- df[complete.cases(df), ]
# let's look at the clean data set again
head(dfComplete)
dim(dfComplete)  # [1] 3230   14
str(dfComplete)
github <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data"
date <- "2018-10-23"
csv <- "movie_profit.csv"
github <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data"
date <- "2018-10-23"
csv <- "movie_profit.csv"
myfile <- paste(github, date, csv, sep = "/")
myfile
names(dfComplete)
head(dfComplete)
min(dfComplete$release_year)
names9df
names(df)
dim(df)
sum(dfComplete$worldwide_flag)
names(dfComplete)
windows()
par(mfrow = c(1, 2))
dfComplete %>%
filter(worldwide_flag == 1) %>%
boxplot(production_budget, main = "production budget (in millions, USD)")
dfComplete %>%
filter(worldwide_flag == 1) %>%
boxplot(worldwide_gross, main = "worldwide gross (in millions, USD)")
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(y = production_budget)) %>%
geom_boxplot
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(y = production_budget)) +
geom_boxplot
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(y = production_budget)) +
geom_boxplot()
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(y = production_budget)) +
geom_boxplot() +
ggtitle("Production Budget") +
theme_bw() +
labs(x = "", y = "production budget (in millions, USD)")
dfComplete %>%
filter(worldwide_flag == 1) %>%
summary(production_budget)
dfComplete %>%
filter(worldwide_flag == 1) %>%
select(production_budget) %>%
summary
# {r setup, eval = T, echo = TRUE, results = 'hide', warning = FALSE, message = FALSE}
# load packages
library(plyr)
library(lubridate)
library(tidyverse)
# load file from github
# source from tidytuesday - they have a new dataset coming out every Tuesday
github <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data"
date <- "2018-10-23"
csv <- "movie_profit.csv"
myfile <- paste(github, date, csv, sep = "/")
df <- readr::read_csv(myfile)
###################
### have a look ###
###################
# head, dim, str
head(df)
dim(df)  # [1] 3401    9
str(df)
############
# clean-up #
############
# check duplication: is there any movie that's duplicated in this data set?
plyr::count(df, "movie") %>%
filter(freq >1)
# what is this movie?
df %>%
filter(movie == "Tau ming chong") %>%
print
# id == 2974, 2975
# let's remove either one of these identical rows
df <- df %>%
filter(X1 != 2974)
# is there any movie that has 0 or even negative domestic/worldwide gross?
df %>%
filter(domestic_gross <=0 | worldwide_gross <= 0)
# there are 66 of these in this data set (as of Oct 29)
# some of them have not been released yet, like the Aquaman!
# let's not remove them but create a flag for each of these variables
df$domestic_flag <- ifelse(df$domestic_gross <=0, 0, 1); sum(df$domestic_flag)
df$worldwide_flag <- ifelse(df$worldwide_gross <=0, 0, 1); sum(df$worldwide_flag)
# let's rename the X1 column and rename it as a movie id column
names(df)[1] <- "movie_id"
# change "date": turn the release_date column as date data type; add release day, month, year
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
# rescale the production_budget, domestic_gross & worldwide_gross (by dividing 1 million)
# so that they are easier to read
df <- df %>%
mutate(production_budget = production_budget / 1000000,
domestic_gross = domestic_gross / 1000000,
worldwide_gross = worldwide_gross / 1000000)
# change mpaa_rating & genre to be factor
df <- df %>%
mutate(mpaa_rating = factor(mpaa_rating,
levels = c("G", "PG", "PG-13", "R")),
genre = as.factor(genre))
# complete.cases - remove all NA's
dfComplete <- df[complete.cases(df), ]
# let's look at the clean data set
head(dfComplete)
dim(dfComplete)  # [1] 3230   14
str(dfComplete)
dfComplete %>%
filter(worldwide_flag == 1) %>%
select(production_budget) %>%
summary
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(y = production_budget)) +
geom_boxplot() +
ggtitle("Production Budget") +
theme_bw() +
labs(x = "", y = "production budget (in millions, USD)")
dfComplete %>%
filter(worldwide_flag == 1) %>%
select(production_budget) %>%
summary
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(y = production_budget)) +
geom_boxplot() +
ggtitle("Production Budget") +
theme_bw() +
labs(x = "", y = "production budget (in millions, USD)")
# production_budget
dfComplete %>%
filter(worldwide_flag == 1) %>%
select(production_budget) %>%
summary
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(y = production_budget)) +
geom_boxplot() +
ggtitle("Production Budget") +
theme_bw() +
labs(x = "", y = "production budget (in millions, USD)")
# worldwide_gross
dfComplete %>%
filter(worldwide_flag == 1) %>%
select(worldwide_gross) %>%
summary
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(y = worldwide_gross)) +
geom_boxplot() +
ggtitle("Worldwide Gross") +
theme_bw() +
labs(x = "", y = "worldwide gross (in millions, USD)")
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(x = production_budget, y = worldwide_gross)) +
geom_point()
windows()
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(x = production_budget, y = worldwide_gross)) +
geom_point() +
facet_wrap(~release_month)
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(x = production_budget, y = worldwide_gross)) +
geom_point() +
scale_y_continuous(labels = scales::dollar) +
geom_smooth(method = "lm", col = "red") +
facet_wrap(~release_month)
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(x = production_budget, y = worldwide_gross)) +
geom_point() +
scale_y_continuous(labels = scales::dollar) +
geom_smooth(method = "lm", col = "red") +
facet_wrap(~release_month) +
ggtitle("Worldwide Gross") +
labs(x = "", y = "worldwide gross (in millions, USD)") +
theme_bw()
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(x = production_budget, y = worldwide_gross)) +
geom_point() +
scale_y_continuous(labels = scales::dollar) +
geom_smooth(method = "lm", col = "red") +
facet_wrap(~release_month) +
ggtitle("Worldwide Gross") +
labs(x = "production_budget (in millions, USD)", y = "worldwide gross (in millions, USD)") +
theme_bw()
dfComplete %>%
filter(worldwide_flag == 1) %>%
select(mpaa_rating) %>%
ftable
dfComplete %>%
filter(worldwide_flag == 1) %>%
select(release_month) %>%
ftable
dfComplete %>%
filter(worldwide_flag == 1) %>%
select(genre) %>%
ftable
# production_budget x worldwide_gross by mpaa_rating
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(x = production_budget, y = worldwide_gross)) +
geom_point() +
scale_y_continuous(labels = scales::dollar) +
geom_smooth(method = "lm", col = "blue") +
facet_wrap(~mpaa_rating) +
ggtitle("Worldwide Gross") +
labs(x = "production_budget (in millions, USD)", y = "worldwide gross (in millions, USD)") +
theme_bw()
# production_budget x worldwide_gross by genre
dfComplete %>%
filter(worldwide_flag == 1) %>%
ggplot(data = ., aes(x = production_budget, y = worldwide_gross)) +
geom_point() +
scale_y_continuous(labels = scales::dollar) +
geom_smooth(method = "lm", col = "green") +
facet_wrap(~genre) +
ggtitle("Worldwide Gross") +
labs(x = "production_budget (in millions, USD)", y = "worldwide gross (in millions, USD)") +
theme_bw()
names(df)
rm(list = ls())
