getwd()
RStudio.Version()
setwd("C:/Users/myvio/Desktop/SPS/606_Statistics and Probability/project/proposal")
dir
dir()
library(tidyverse)
install.packages("tidyverse")
# load packages
library(tidyverse)
# load data
myfile <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018-10-23/movie_profit.csv"
df <- readr::read_csv(myfile)
# head
head(df)
# head, dim
head(df); dim(df)
View(df)
# str
str(df)
search()
install.packages("plyr")
install.packages("plyr")
ls(pos = "package:plyr")
library(plyr)
ls(pos = "package:plyr")
search()
library(tidyverse)
ls()
names(df)
# check duplication
plyr::count(df, movie)
# check duplication
plyr::count(df, "movie")
# check duplication
plyr::count(df, "movie") %>%
select(freq) %>%
sum
dim(df)
# check duplication
plyr::count(df, "movie") %>%
filter(freq >1)
# check duplication
plyr::count(df, "movie") %>%
filter(freq >1)
df %>%
filter(movie == "Tau ming chong") %>%
View
names(df)
# remove duplicated row
df <- df %>%
filter(X1 != 2974)
dim(df)
# let's rename the X1 column and make it a movie id column
names(df)[1] <- "movie_id"
# is there any movie that has 0 or even negative domestic/worldwide gross? Let's remove them
df %>%
filter(domestic_gross <=0 | worldwide_gross <= 0)
# let's not remove them but create a flag for each of these variables
df$domestic_flag <- ifelse(df$domestic_gross <=0, 0, 1)
df$worldwide_flag <- ifelse(df$worldwide_gross <=0, 0, 1)
sum(df$domestic_flag)
dim(df)
sum(df$worldwide_flag)
str(df)
View(df)
str(df)
# turn the release_date column as date datat type
df$release_date <- as.Date(df$release_date, "%m/%d/%Y")
ls(pos = "package:lubridate")
librayr(lubridate)
search()
install.packages("lubridate")
install.packages("lubridate")
# load packages
library(plyr)
library(lubridate)
library(tidyverse)
ls()
dim(df)
head(df$release_date)
head(df$release_date) %>% day
head(df$release_date) %>% weekdays()
ls(pos = "package:lubridate")
ls()
rm(list = ls())
myfile <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018-10-23/movie_profit.csv"
df <- readr::read_csv(myfile)
# str
str(df)
############
# clean-up #
############
# check duplication: is there any movie that's duplicated in this data set?
plyr::count(df, "movie") %>%
filter(freq >1)
# what is this movie?
df %>%
filter(movie == "Tau ming chong") %>%
View
# what is this movie?
df %>%
filter(movie == "Tau ming chong") %>%
print
# let's remove either one of the rows
df <- df %>%
filter(X1 != 2974)
# is there any movie that has 0 or even negative domestic/worldwide gross?
df %>%
filter(domestic_gross <=0 | worldwide_gross <= 0)
df$domestic_flag <- ifelse(df$domestic_gross <=0, 0, 1); sum(df$domestic_flag)
df$worldwide_flag <- ifelse(df$worldwide_gross <=0, 0, 1); sum(df$worldwide_flag)
# let's rename the X1 column and rename it as a movie id column
names(df)[1] <- "movie_id"
# change "date": turn the release_date column as date datat type; add release day, month, year
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::weekdays(release_date),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
search()
ls(pos = "package:lubridate")
now()
now() %>% wday
# change "date": turn the release_date column as date datat type; add release day, month, year
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
?wday
now() %>% week
now() %>% wday(., abbr = T)
now() %>% wday(., abbr = F)
now() %>% wday(., abbr = F)
now() %>% wday(., abbr = F, week_start = "ISO")
now()
wday("2018-10-27 18:22:18 EDT")
wday("2018-10-27 18:22:18 EDT", abbr = T)
View(df)
str(df)
now() %>% weekdays()
?weekdays
?wdays
?wday
# change "date": turn the release_date column as date datat type; add release day, month, year
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
lubridate::wday(now(),
week_start = getOption("lubridate.week.start", 1))
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
View(df)
myfile <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018-10-23/movie_profit.csv"
df <- readr::read_csv(myfile)
############
# clean-up #
############
# check duplication: is there any movie that's duplicated in this data set?
plyr::count(df, "movie") %>%
filter(freq >1)
# what is this movie?
df %>%
filter(movie == "Tau ming chong") %>%
print
# let's remove either one of the rows
df <- df %>%
filter(X1 != 2974)
# is there any movie that has 0 or even negative domestic/worldwide gross?
df %>%
filter(domestic_gross <=0 | worldwide_gross <= 0)
df$domestic_flag <- ifelse(df$domestic_gross <=0, 0, 1); sum(df$domestic_flag)
df$worldwide_flag <- ifelse(df$worldwide_gross <=0, 0, 1); sum(df$worldwide_flag)
# let's rename the X1 column and rename it as a movie id column
names(df)[1] <- "movie_id"
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
View(df)
df
# rescale the production_budget, domestic_gross & worldwide_gross (by dividing 1 million)
# so that they are easier to read
df <- df %>%
mutate(production_budget = production_budget / 1000000,
domestic_gross = domestic_gross / 1000000,
worldwide_gross = worldwide_gross / 1000000)
View(df)
str(df)
unique(df$distributor)
unique(df$mpaa_rating)
?as.factor
unique(df$genre)
# make "factor" for mpaa_rating & genre
df <- df %>%
mutate(mpaa_rating = as.factor(mpaa_rating,
levels = c("G", "PG", "PG-13", "R")),
genre = as.factor(genre))
# make "factor" for mpaa_rating & genre
df <- df %>%
mutate(mpaa_rating = factor(mpaa_rating,
levels = c("G", "PG", "PG-13", "R")),
genre = as.factor(genre))
View(df)
str(df)
summary(df$mpaa_rating)
levels(df$mpaa_rating)
levels(df$genre)
# complete.cases - remove all NA's
dfComplete <- df %>%
complete.cases
# head, dim, str
head(dfComplete)
dim(dfComplete)
?complete.cases
complete.cases(df) %>% head
df[complete.cases(df), ] %>% head
# complete.cases - remove all NA's
dfComplete <- df[complete.cases(df), ]
# head, dim, str
head(dfComplete)
dim(dfComplete)
str(dfComplete)
rm(list = ls())
myfile <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018-10-23/movie_profit.csv"
df <- readr::read_csv(myfile)
###################
### have a look ###
###################
# head, dim, str
head(df)
dim(df)
str(df)
plyr::count(df, "movie") %>%
filter(freq >1)
# what is this movie?
df %>%
filter(movie == "Tau ming chong") %>%
print
# id == 2974, 2975
# let's remove either one of the rows
df <- df %>%
filter(X1 != 2974)
# is there any movie that has 0 or even negative domestic/worldwide gross?
df %>%
filter(domestic_gross <=0 | worldwide_gross <= 0)
# there are 66 of these in this data set
# let's not remove them but create a flag for each of these variables
df$domestic_flag <- ifelse(df$domestic_gross <=0, 0, 1); sum(df$domestic_flag)
df$worldwide_flag <- ifelse(df$worldwide_gross <=0, 0, 1); sum(df$worldwide_flag)
# let's rename the X1 column and rename it as a movie id column
names(df)[1] <- "movie_id"
# change "date": turn the release_date column as date data type; add release day, month, year
df <- df %>%
mutate(release_date = lubridate::mdy(release_date),
release_day = lubridate::wday(release_date,
week_start = getOption("lubridate.week.start", 1)),
release_month = lubridate::month(release_date),
release_year = lubridate::year(release_date))
# rescale the production_budget, domestic_gross & worldwide_gross (by dividing 1 million)
# so that they are easier to read
df <- df %>%
mutate(production_budget = production_budget / 1000000,
domestic_gross = domestic_gross / 1000000,
worldwide_gross = worldwide_gross / 1000000)
# make "factor" for mpaa_rating & genre
df <- df %>%
mutate(mpaa_rating = factor(mpaa_rating,
levels = c("G", "PG", "PG-13", "R")),
genre = as.factor(genre))
# complete.cases - remove all NA's
dfComplete <- df[complete.cases(df), ]
# head, dim, str
head(dfComplete)
dim(dfComplete)  # [1] 3230   14
str(dfComplete)
View(df)
lm(worldwide_gross ~ ., data = dfComplete %>% filter(worldwide_flag == 1), )
df_lm <- lm(worldwide_gross ~ ., data = dfComplete %>% filter(worldwide_flag == 1))
summary(df_lm)
rm(df_lm)
str(df)
df_lm <- lm(worldwide_gross ~ production_budget + mpaa_rating + genre + release_month
, data = dfComplete %>% filter(worldwide_flag == 1))
summary(df_lm)
quit
quit()
