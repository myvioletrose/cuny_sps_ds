library(Rcpp)
library(DATA606)
install.packages("later")
install.packages("later", dependencies = T)
install.packages("later", dependencies = T, TRUE)
install.packages("installr") # install
install.packages("installr") # install
installr::updateR(T) # updating R.
quit()
setwd("C:/Users/traveler/Desktop/SPS/606_Statistics and Probability/lab/Lab6")
1.96 * 0.0132
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
plot(me ~ p, ylab = "Margin of Error", xlab = "Population Proportion")
p <- 0.1
n <- 1040
p_hats <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats[i] <- sum(samp == "atheist")/n
}
hist(p_hats, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
}
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c("atheist", "non_atheist"),
n,
replace = TRUE,
prob = c(p, 1-p)) )
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
#################################
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c("atheist", "non_atheist"),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
windows()
hist(simulation(1040, 0.1, 5000), main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
simulation(1040, 0.1, 5000)
n = 1040; p = 0.1
mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
#################################
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
hist(simulation(1040, 0.1, 5000), main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
n1 = 1040
p1 = 0.1
n2 = 400
p2 = 0.1
n3 = 1040
p3 = 0.02
n4 = 400
p4 = 0.02
parameters <- c(c(n1, p1), c(n2, p2), c(n3, p3), c(n4, p4))
test1 <- map(parameters, simulation)
parameters <- list(c(n1, p1), c(n2, p2), c(n3, p3), c(n4, p4))
test1 <- map(parameters, simulation)
parameters <- list(c(n1, p1), c(n2, p2), c(n3, p3), c(n4, p4))
test1 <- map(parameters, simulation)
parameters <- c(c(n1, p1), c(n2, p2), c(n3, p3), c(n4, p4))
parameters
class(parameters)
length(parameters)
parameters <- list(n = c(n1, n2, n3, n4), p = c(p1, p2, p3, p4))
parameters
test1 <- map(parameters, function(x, y) simulation(n[[x]], p[[y]], iteration = 5000, seed = 1234))
parameters$n
test1 <- map2(parameters$n, parameters$p, simulation)
summary(test1)
class(test1)
test1[[1]]
windows()
hist(test1[[1]], main = "test1")
windows()
# Based on these limited plots, how does n appear to affect the distribution of p^?
# How does p affect the sampling distribution?
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
n1 = 1040; p1 = 0.1
n2 = 400; p2 = 0.1
n3 = 1040; p3 = 0.02
n4 = 400; p4 = 0.02
parameters <- list(n = c(n1, n2, n3, n4), p = c(p1, p2, p3, p4))
output <- purrr::map2(parameters$n, parameters$p,
simulation)
par(mfrow = c(2, 2))
hist(output[[1]], main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
hist(output[[2]], main = "p = 0.1, n = 400", xlim = c(0, 0.18))
hist(output[[3]], main = "p = 0.02, n = 1040", xlim = c(0, 0.06))
hist(output[[4]], main = "p = 0.02, n = 400", xlim = c(0, 0.06))
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
n1 = 1040; p1 = 0.1
n2 = 400; p2 = 0.1
n3 = 1040; p3 = 0.02
n4 = 400; p4 = 0.02
parameters <- list(n = c(n1, n2, n3, n4), p = c(p1, p2, p3, p4))
output <- purrr::map2(parameters$n, parameters$p,
simulation)
par(mfrow = c(2, 2))
hist(output[[1]], main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
hist(output[[2]], main = "p = 0.1, n = 400", xlim = c(0, 0.18))
hist(output[[3]], main = "p = 0.02, n = 1040", xlim = c(0, 0.06))
hist(output[[4]], main = "p = 0.02, n = 400", xlim = c(0, 0.06))
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
n1 = 1040; p1 = 0.1
n2 = 400; p2 = 0.1
n3 = 1040; p3 = 0.02
n4 = 400; p4 = 0.02
parameters <- list(n = c(n1, n2, n3, n4), p = c(p1, p2, p3, p4))
output <- purrr::map2(parameters$n, parameters$p,
simulation)
par(mfrow = c(2, 2))
hist(output[[1]], main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
hist(output[[2]], main = "p = 0.1, n = 400", xlim = c(0, 0.18))
hist(output[[3]], main = "p = 0.02, n = 1040", xlim = c(0, 0.06))
hist(output[[4]], main = "p = 0.02, n = 400", xlim = c(0, 0.06))
load("more/atheism.RData")
us12 <- subset(atheism, nationality == "United States" & year == "2012")
prop.table(ftable(us12$response))
inference(us12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
hk12 <- subset(atheism, nationality == "Hong Kong" & year == "2012")
j12 <- subset(atheism, nationality == "Japan" & year == "2012")
inference(hk12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
inference(j12$response, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
plot(me ~ p, ylab = "Margin of Error", xlab = "Population Proportion")
p <- 0.1
n <- 1040
p_hats <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats[i] <- sum(samp == "atheist")/n
}
hist(p_hats, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
n1 = 1040; p1 = 0.1
n2 = 400; p2 = 0.1
n3 = 1040; p3 = 0.02
n4 = 400; p4 = 0.02
parameters <- list(n = c(n1, n2, n3, n4), p = c(p1, p2, p3, p4))
output <- purrr::map2(parameters$n, parameters$p,
simulation)
par(mfrow = c(2, 2))
hist(output[[1]], main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
hist(output[[2]], main = "p = 0.1, n = 400", xlim = c(0, 0.18))
hist(output[[3]], main = "p = 0.02, n = 1040", xlim = c(0, 0.06))
hist(output[[4]], main = "p = 0.02, n = 400", xlim = c(0, 0.06))
windows()
?switch
# example of bootstrapping, data simulation
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
n1 = 1040; p1 = 0.1
n2 = 400; p2 = 0.1
n3 = 1040; p3 = 0.02
n4 = 400; p4 = 0.02
parameters <- list(n = c(n1, n2, n3, n4), p = c(p1, p2, p3, p4))
output <- purrr::map2(parameters$n, parameters$p,
simulation)
windows()
par(mfrow = c(2, 2))
hist(output[[1]], main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
hist(output[[2]], main = "p = 0.1, n = 400", xlim = c(0, 0.18))
hist(output[[3]], main = "p = 0.02, n = 1040", xlim = c(0, 0.06))
hist(output[[4]], main = "p = 0.02, n = 400", xlim = c(0, 0.06))
# example of bootstrapping, data simulation
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
n1 = 1040; p1 = 0.1
n2 = 400; p2 = 0.1
n3 = 1040; p3 = 0.02
n4 = 400; p4 = 0.02
parameters <- list(n = c(n1, n2, n3, n4), p = c(p1, p2, p3, p4))
output <- purrr::map2(parameters$n, parameters$p,
simulation)
windows()
par(mfrow = c(2, 2))
hist(output[[1]], main = "p = 0.1, n = 1040", xlim = c(0, 0.18)); lines(output[[1]], lwd = 2)
hist(output[[2]], main = "p = 0.1, n = 400", xlim = c(0, 0.18)); lines(output[[2]], lwd = 2)
hist(output[[3]], main = "p = 0.02, n = 1040", xlim = c(0, 0.06)); lines(output[[3]], lwd = 2)
hist(output[[4]], main = "p = 0.02, n = 400", xlim = c(0, 0.06)); lines(output[[4]], lwd = 2)
# example of bootstrapping, data simulation
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
n1 = 1040; p1 = 0.1
n2 = 400; p2 = 0.1
n3 = 1040; p3 = 0.02
n4 = 400; p4 = 0.02
parameters <- list(n = c(n1, n2, n3, n4), p = c(p1, p2, p3, p4))
output <- purrr::map2(parameters$n, parameters$p,
simulation)
windows()
par(mfrow = c(2, 2))
hist(output[[1]], main = "p = 0.1, n = 1040", xlim = c(0, 0.18)); lines(density(output[[1]]), lwd = 2)
hist(output[[2]], main = "p = 0.1, n = 400", xlim = c(0, 0.18)); lines(density(output[[2]]), lwd = 2)
hist(output[[3]], main = "p = 0.02, n = 1040", xlim = c(0, 0.06)); lines(density(output[[3]]), lwd = 2)
hist(output[[4]], main = "p = 0.02, n = 400", xlim = c(0, 0.06)); lines(density(output[[4]]), lwd = 2)
# example of bootstrapping, data simulation
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
n1 = 1040; p1 = 0.1
n2 = 400; p2 = 0.1
n3 = 1040; p3 = 0.02
n4 = 400; p4 = 0.02
parameters <- list(n = c(n1, n2, n3, n4), p = c(p1, p2, p3, p4))
output <- purrr::map2(parameters$n, parameters$p,
simulation)
windows()
par(mfrow = c(2, 2))
hist(output[[1]], main = "p = 0.1, n = 1040", xlim = c(0, 0.18), freq = F); lines(density(output[[1]]), lwd = 2)
hist(output[[2]], main = "p = 0.1, n = 400", xlim = c(0, 0.18), freq = F); lines(density(output[[2]]), lwd = 2)
hist(output[[3]], main = "p = 0.02, n = 1040", xlim = c(0, 0.06), freq = F); lines(density(output[[3]]), lwd = 2)
hist(output[[4]], main = "p = 0.02, n = 400", xlim = c(0, 0.06), freq = F); lines(density(output[[4]]), lwd = 2)
simulation <- function(n, p, iteration = 5000, seed = 1234){
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(plyr)){install.packages("plyr"); require(plyr)}
set.seed(seed)
sim <- as.vector(rep(NA, iteration))
sim <- map(1:iteration, function(x) sim[x] <- mean( sample(
c(1, 0),
n,
replace = TRUE,
prob = c(p, 1-p)) )
)
sim <- sim %>%
plyr::ldply(., data.frame)
sim <- as.vector(sim[,1])
}
n1 = 1040; p1 = 0.1
n2 = 400; p2 = 0.1
n3 = 1040; p3 = 0.02
n4 = 400; p4 = 0.02
parameters <- list(n = c(n1, n2, n3, n4), p = c(p1, p2, p3, p4))
output <- purrr::map2(parameters$n, parameters$p,
simulation)
par(mfrow = c(2, 2))
hist(output[[1]], main = "p = 0.1, n = 1040", xlim = c(0, 0.18), freq = F); lines(density(output[[1]]), lwd = 2)
hist(output[[2]], main = "p = 0.1, n = 400", xlim = c(0, 0.18), freq = F); lines(density(output[[2]]), lwd = 2)
hist(output[[3]], main = "p = 0.02, n = 1040", xlim = c(0, 0.06), freq = F); lines(density(output[[3]]), lwd = 2)
hist(output[[4]], main = "p = 0.02, n = 400", xlim = c(0, 0.06), freq = F); lines(density(output[[4]]), lwd = 2)
ls()
head(atheism)
spain <- atheism %>%
filter(nationality == 'Spain') %>%
ifelse(response == "non-atheist", 0, 1)
spain <- atheism %>%
dplyr::filter(nationality == 'Spain') %>%
ifelse(response == "non-atheist", 0, 1)
ls(pos = "package:dplyr")
ls(pos = "package:tidyr")
ls(pos = "package:dplyr")
library(dplyr)
atheism %>%
dplyr::filter(nationality == 'Spain') %>%
ifelse(response == "non-atheist", 0, 1)
ls(pos = "package:dplyr")
spain <- atheism %>%
dplyr::filter(nationality == 'Spain') %>%
# ifelse(response == "non-atheist", 0, 1) %>%
mutate_if(response == "non-atheist", 0, 1)
spain <- atheism %>%
dplyr::filter(nationality == 'Spain')
spain
spain$response <- ifelse(spain$response == "non-atheist", 0, 1)
head(spain, 20)
unique(spain$year)
spain2005 <- spain$response[spain$year == 2005]
spain2005
?inference
library(DATA606)
?inference
?Inference
inference(y = spain2005, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
inference(spain$2005)
spain <- atheism %>%
dplyr::filter(nationality == 'Spain')
spain$response <- ifelse(spain$response == "non-atheist", 0, 1)
spain2005 <- spain$response[spain$year == 2005]
spain2012 <- spain$response[spain$year == 2012]
inference(y = spain2005, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
inference(y = spain2012, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
us <- atheism %>%
dplyr::filter(nationality == 'United States')
us <- atheism %>%
dplyr::filter(nationality == 'United States')
us$response <- ifelse(spain$response == "non-atheist", 0, 1)
us2005 <- us$response[us$year == 2005]
us2012 <- us$response[us$year == 2012]
inference(y = us2005, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
inference(y = us2012, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
us <- atheism %>%
dplyr::filter(nationality == 'United States')
us <- atheism %>%
dplyr::filter(nationality == 'United States')
us$response <- ifelse(us$response == "non-atheist", 0, 1)
us2005 <- us$response[us$year == 2005]
us2012 <- us$response[us$year == 2012]
inference(y = us2005, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
inference(y = us2012, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
spain <- atheism %>%
dplyr::filter(nationality == 'Spain')
spain$response <- ifelse(spain$response == "non-atheist", 0, 1)
spain2005 <- spain$response[spain$year == 2005]
spain2012 <- spain$response[spain$year == 2012]
inference(y = spain2005, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
inference(y = spain2012, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
us <- atheism %>%
dplyr::filter(nationality == 'United States')
us$response <- ifelse(us$response == "non-atheist", 0, 1)
us2005 <- us$response[us$year == 2005]
us2012 <- us$response[us$year == 2012]
inference(y = us2005, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
inference(y = us2012, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
us <- atheism %>%
dplyr::filter(nationality == 'United States')
us$response <- ifelse(us$response == "non-atheist", 0, 1)
us2005 <- us$response[us$year == 2005]
us2012 <- us$response[us$year == 2012]
inference(y = us2005, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
inference(y = us2012, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
conflevel = 0.95)
0.5^2
sqrt(0.5^2)
(1.96 * 5) ^2
sqrt(97)
0.5 / sqrt(97)
1.96 * (0.5 / sqrt(97))
0.9 * 0.1
1.96 * (sqrt(0.09) / sqrt(97))
100 * 0.05
0.099
0.099 * 100
0.5 / 0.01
(1.96 * (50)) ^2
(1.96 * 50) ^2
(1.96 * 50)
98^2
1.96 * (0.5 / sqrt(9604))
1.96 * (0.5 / sqrt(9605))
1.96 * (sqrt((0.5)*(0.5)) / sqrt(9605))
