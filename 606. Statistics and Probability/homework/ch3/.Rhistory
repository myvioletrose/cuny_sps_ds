) )
# [1] "38.3 % is found in this region"
# what percent of a standard normal distribution N(mu = 0, sigma = 1) is found in each region?
# (c) Z >8
mu = 0
sigma = 1
x <- rnorm(100000, mu, sigma)
hist(x, freq = F, main = "region C on the right side of the red dash line")
abline(v = 8, col = "red", lty = 2)
print( paste(
round( (1 - pnorm(q = 8, mean = mu, sd = sigma)) * 100, 15 ),
"% is found in this region"
) )
# [1] "6.7e-14 % is found in this region"
# virtually close to 0% and the red dash line cannot even be seen as it is too far on the right
# (outside the margin of the chart)
# what percent of a standard normal distribution N(mu = 0, sigma = 1) is found in each region?
# (a) Z > -1.13
mu = 0
sigma = 1
x <- rnorm(100000, mu, sigma)
hist(x, freq = F, main = "region A on the right side of the red dash line")
abline(v = -1.13, col = "red", lty = 2)
print( paste(
round( (1 - pnorm(q = -1.13, mean = mu, sd = sigma)) * 100, 1 ),
"% is found in this region"
# [1] "87.1 % is found in this region"
) )
# what percent of a standard normal distribution N(mu = 0, sigma = 1) is found in each region?
# (d) |Z| >0.5
mu = 0
sigma = 1
x <- rnorm(100000, mu, sigma)
hist(x, freq = F, main = "region D on the left and right side of the red dash line\n=(everything else minus the area in the middle")
abline(v = 0.5, col = "red", lty = 2)
abline(v = -0.5, col = "red", lty = 2)
print( paste(
round( (1 - pnorm(q = 0.5, mean = mu, sd = sigma) - pnorm(q = -0.5, mean = mu, sd = sigma)) * 100, 1 ),
"% is found in this region"
) )
# [1] "38.3 % is found in this region"
# what percent of a standard normal distribution N(mu = 0, sigma = 1) is found in each region?
# (d) |Z| >0.5
mu = 0
sigma = 1
x <- rnorm(100000, mu, sigma)
hist(x, freq = F, main = "region D on the left and right side of the red dash line\n=(everything else minus the area in the middle")
abline(v = 0.5, col = "red", lty = 2)
abline(v = -0.5, col = "red", lty = 2)
print( paste(
round( (1 - pnorm(q = 0.5, mean = mu, sd = sigma) - pnorm(q = -0.5, mean = mu, sd = sigma)) * 100, 1 ),
"% is found in this region"
) )
# [1] "38.3 % is found in this region"
pnorm(q = 0.5, mean = mu, sd = sigma) - pnorm(q = -0.5, mean = mu, sd = sigma)
1 - pnorm(q = 0.5, mean = mu, sd = sigma) - pnorm(q = -0.5, mean = mu, sd = sigma)
pnorm(q = 0.5, mean = mu, sd = sigma) - pnorm(q = -0.5, mean = mu, sd = sigma)
(1 - (pnorm(q = 0.5, mean = mu, sd = sigma) - pnorm(q = -0.5, mean = mu, sd = sigma)))
round( (1 - (pnorm(q = 0.5, mean = mu, sd = sigma) - pnorm(q = -0.5, mean = mu, sd = sigma))) * 100, 1 )
# what percent of a standard normal distribution N(mu = 0, sigma = 1) is found in each region?
# (d) |Z| >0.5
mu = 0
sigma = 1
x <- rnorm(100000, mu, sigma)
hist(x, freq = F, main = "region D on the left and right side of the red dash line\n=(everything else minus the area in the middle")
abline(v = 0.5, col = "red", lty = 2)
abline(v = -0.5, col = "red", lty = 2)
print( paste(
round( (1 - (pnorm(q = 0.5, mean = mu, sd = sigma) - pnorm(q = -0.5, mean = mu, sd = sigma))) * 100, 1 ),
"% is found in this region"
) )
# [1] "38.3 % is found in this region"
# what percent of a standard normal distribution N(mu = 0, sigma = 1) is found in each region?
# (d) |Z| >0.5
mu = 0
sigma = 1
x <- rnorm(100000, mu, sigma)
hist(x, freq = F, main = "region D on the left and right side of the red dash line\n=(everything else minus the area in the middle)")
abline(v = 0.5, col = "red", lty = 2)
abline(v = -0.5, col = "red", lty = 2)
print( paste(
round( (1 - (pnorm(q = 0.5, mean = mu, sd = sigma) - pnorm(q = -0.5, mean = mu, sd = sigma))) * 100, 1 ),
"% is found in this region"
) )
# [1] "61.7 % is found in this region"
rm(list = ls())
leo <- 4948
mary <- 5513
leo.z <- (4313 - 4948) / 583
mary.z <- (5261 - 5513) / 807
leo.z
mary.z
pnorm(leo.z, mean = 4313, sd = 583)
qnorm(leo.z, mean = 4313, sd = 583)
dnorm(leo.z, mean = 4313, sd = 583)
?qnorm
qnorm(0.5, 100, 10)
qnorm(0.99, 100, 10)
pnorm(123, 100, 10)
qnorm(leo.z, 0, 1)
pnorm(leo.z, 0, 1)
pnorm(mary.z, 0, 1)
round(100 * (pnorm(mary.z, 0, 1)), 1)
round(100 * (pnorm(leo.z, 0, 1)), 1)
print(paste("Mary ranked ",
round(100 * (pnorm(mary.z, 0, 1)), 1),
" in her group, whereas Leo ranked ",
round(100 * (pnorm(leo.z, 0, 1)), 1),
"."))
print(paste("Mary ranked ",
round(100 * (pnorm(mary.z, 0, 1)), 1),
"in her group, whereas Leo ranked",
round(100 * (pnorm(leo.z, 0, 1)), 1),
"."))
print(paste("Mary ranked",
round(100 * (pnorm(mary.z, 0, 1)), 1),
"in her group, whereas Leo ranked",
round(100 * (pnorm(leo.z, 0, 1)), 1),
"."))
print(paste("Mary ranked ",
round(100 * (pnorm(mary.z, 0, 1)), 1),
"in her group, whereas Leo ranked ",
round(100 * (pnorm(leo.z, 0, 1)), 1),
".", sep = ""))
print(paste("Mary ranked ",
round(100 * (pnorm(mary.z, 0, 1)), 1),
" in her group, whereas Leo ranked ",
round(100 * (pnorm(leo.z, 0, 1)), 1),
".", sep = ""))
print(paste("Mary ranked ",
round(100 * (pnorm(mary.z, 0, 1)), 1),
" in her group, whereas Leo ranked ",
round(100 * (pnorm(leo.z, 0, 1)), 1),
".", sep = ""))
pnorm(leo.z, 0, 1)
round(1 - pnorm(leo.z, 0, 1))
round(1 - pnorm(leo.z, 0, 1), 2)
round(pnorm(leo.z, 0, 1), 2)
round(pnorm(mary.z, 0, 1), 2)
female_height <- c(54, 55, 56, 56, 57, 58, 58, 59, 60, 60, 60, 61, 62, 62, 63, 63, 63, 64, 65, 66, 67, 67, 69, 73)
table(female_height)
windows()
barplot(female_height)
boxplot(female_height)
fivenum(female_height)
qqplot(female_height)
?qqplot
?rt
?qqplot
qqplot(female_height, rnorm(25, mean = 61.52, sd = 4.58))
qqline(female_height)
qqnorm(female_height)
qqline(female_height)
female_height <- c(54, 55, 56, 56, 57, 58, 58, 59, 60, 60, 60, 61, 62, 62, 63, 63, 63, 64, 65, 66, 67, 67, 69, 73)
qqnorm(female_height, main = "Normal Q-Q plot of Female College Students")
qqline(female_height)
female_height <- c(54, 55, 56, 56, 57, 58, 58, 59, 60, 60, 60, 61, 62, 62, 63, 63, 63, 64, 65, 66, 67, 67, 69, 73)
qqnorm(female_height, main = "Normal Q-Q plot of Female College Students")
qqline(female_height)
?qqnormsim
library(DATA606)
?qqnormsim
windows()
qqnormsim(female_height)
female_height <- c(54, 55, 56, 56, 57, 58, 58, 59, 60, 60, 60, 61, 62, 62, 63, 63, 63, 64, 65, 66, 67, 67, 69, 73)
qqnorm(female_height, main = "Normal Q-Q plot of Female College Students")
qqline(female_height)
# alternatively, we can use the qqnormsim() function from the DATA606 package
library(DATA606)
windows()
qqnormsim(female_height)
female_height <- c(54, 55, 56, 56, 57, 58, 58, 59, 60, 60, 60, 61, 62, 62, 63, 63, 63, 64, 65, 66, 67, 67, 69, 73)
qqnorm(female_height, main = "Normal Q-Q plot of Female College Students")
qqline(female_height)
# alternatively, we can use the qqnormsim() function from the DATA606 package
library(DATA606)
qqnormsim(female_height)
female_height <- c(54, 55, 56, 56, 57, 58, 58, 59, 60, 60, 60, 61, 62, 62, 63, 63, 63, 64, 65, 66, 67, 67, 69, 73)
qqnorm(female_height, main = "Normal Q-Q plot of Female College Students")
qqline(female_height)
# alternatively, we can use the qqnormsim() function from the DATA606 package
library(DATA606)
qqnormsim(female_height)
rm(list = ls())
dgeom(x = 10, prob = 0.02)
pgeom(x = 1:10, prob = 0.02)
pgeom(q = 1:10, prob = 0.02)
pgeom(q = 100:110, prob = 0.02)
pgeom(q = 1:10, prob = 0.02)
pgeom(q = 0:10, prob = 0.02)
defect = 0.02
dgeom(x = defect, prob = 0.02)
# geometric distribution
defect = 0.02
dgeom(x = 10, prob = 0.02)
# geometric distribution
defect = 0.02
dgeom(x = 10, prob = 0.02)
dgeom(x = 100, prob = 0.02)
dgeom(x = 50, prob = 0.02)
dgeom(x = 15, prob = 0.02)
dgeom(x = 25, prob = 0.02)
dgeom(x = 22, prob = 0.02)
dgeom(x = 17, prob = 0.02)
dgeom(x = 12, prob = 0.02)
?pbinom
pbinom(0, size = 100, prob = 0.02)
pbinom(0, size = 10, prob = 0.5)
pbinom(5, size = 10, prob = 0.5)
pbinom(7, size = 10, prob = 0.5)
# geometric distribution
defect = 0.02
pbinom(0, size = 100, prob = defect)
pbinom(0, size = 1000, prob = defect)
pbinom(0, size = 100, prob = defect)
pbinom(7, size = 10, prob = 0.5)
pbinom(10, size = 10, prob = 0.5)
pbinom(11, size = 10, prob = 0.5)
pbinom(10, size = 10, prob = 0.5)
pbinom(0, size = 10, prob = 0.5)
pbinom(5, size = 10, prob = 0.5)
pbinom(5, size = 10, prob = 0.5, lower = F)
pbinom(10, size = 10, prob = 0.5, lower = F)
pbinom(1, size = 10, prob = 0.5, lower = T)
pbinom(10, size = 10, prob = 0.5, lower = F)
pbinom(9, size = 10, prob = 0.5, lower = F)
pbinom(0, size = 10, prob = 0.5, lower = T)
pbinom(0, size = 2, prob = 0.5, lower = T)
0.5 * 0.5
pbinom(0, size = 4, prob = 0.5, lower = T)
0.5 * 0.5 * 0.5 * 0.5
pbinom(1, size = 4, prob = 0.5, lower = T)
0.5 * 0.5 * 0.5
0.5 * 0.5 * 0.5
0.5 * 0.5 * 0.5 * 0.5
pbinom(0, size = 4, prob = 0.5, lower = T)
pbinom(4, size = 4, prob = 0.5, lower = T)
pbinom(0, size = 100, prob = defect)
# (a) geometric distribution
defect = 0.02
print(paste("(a) The probability that exactly the 10th transistor is the first to defect is approximately ",
round(100 * dgeom(x = 10, prob = defect), 1),
"%.",
sep = ""))
# (b) binomial distribution
print(paste("(a) The probability that the machine produces no defective transistor in a batch of 100 is approximately ",
round(100 * pbinom(x = 0, size = 100, prob = defect), 1),
"%.",
sep = ""))
# (a) geometric distribution
defect = 0.02
print(paste("(a) The probability that exactly the 10th transistor is the first to defect is approximately ",
round(100 * dgeom(x = 10, prob = defect), 1),
"%.",
sep = ""))
# (b) binomial distribution
print(paste("(a) The probability that the machine produces no defective transistor in a batch of 100 is approximately ",
round(100 * pbinom(q = 0, size = 100, prob = defect), 1),
"%.",
sep = ""))
pbinom(0, size = 100, prob = 0.02, lower = F)
pbinom(0, size = 100, prob = 0.02, lower = T)
# (a) geometric distribution
defect = 0.02
print(paste("(a) The probability that exactly the 10th transistor is the first to defect is approximately ",
round(100 * dgeom(x = 10, prob = defect), 1),
"%.",
sep = ""))
# (b) binomial distribution
print(paste("(b) The probability that the machine produces no defective transistor in a batch of 100 is approximately ",
round(100 * pbinom(q = 0, size = 100, prob = defect), 1),
"%.",
sep = ""))
?ppois
ppois(q = 2, lambda = 0.02)
ppois(q = 0, lambda = 0.02)
ppois(q = 10, lambda = 0.02)
ppois(q = 10, lambda = 2)
ppois(q = 0, lambda = 2)
pbinom(0, size = 100, prob = 0.02, lower = T)
x = (1 - defect) / defect
x
(1 - defect)
sd = sqrt((1 - defect) / defect^2))
sd = sqrt( ((1 - defect) / defect^2) )
sd
defect^2
(1 - defect)
(1 - defect) / defect^2
sqrt((1 - defect) / defect^2)
1 / defect
sqrt( ((1 - defect) / defect^2) )
x = 1 / defect
sd = sqrt( ((1 - defect) / defect^2) )
# (a) geometric distribution
defect = 0.02
print(paste("(a) The probability that exactly the 10th transistor is the first to defect is approximately ",
round(100 * dgeom(x = 10, prob = defect), 1),
"%.",
sep = ""))
# (b) binomial distribution
print(paste("(b) The probability that the machine produces no defective transistor in a batch of 100 is approximately ",
round(100 * pbinom(q = 0, size = 100, prob = defect), 1),
"%.",
sep = ""))
# the question can also be solved using poisson distribution, i.e. ppois(q = 0, lambda = 2) and that would give similar result
# (c) mean and sd of geometric distribution
x = 1 / defect
sd = sqrt( ((1 - defect) / defect^2) )
print(paste("(c) The expected number of transistor to be produced before the first with a defect is ",
x,
" whereas the standard deviation is ",
sd,
sep = ""))
# (a) geometric distribution
defect = 0.02
print(paste("(a) The probability that exactly the 10th transistor is the first to defect is approximately ",
round(100 * dgeom(x = 10, prob = defect), 1),
"%.",
sep = ""))
# (b) binomial distribution
print(paste("(b) The probability that the machine produces no defective transistor in a batch of 100 is approximately ",
round(100 * pbinom(q = 0, size = 100, prob = defect), 1),
"%.",
sep = ""))
# the question can also be solved using poisson distribution, i.e. ppois(q = 0, lambda = 2) and that would give similar result
# (c) mean and sd of geometric distribution
x = 1 / defect
sd = sqrt( ((1 - defect) / defect^2) )
print(paste("(c) The expected number of transistor to be produced before the first with a defect is ",
x,
" whereas the standard deviation is ",
round(sd, 2),
sep = ""))
# (a) geometric distribution
defect = 0.02
print(paste("(a) The probability that exactly the 10th transistor is the first to defect is approximately ",
round(100 * dgeom(x = 10, prob = defect), 1),
"%.",
sep = ""))
# (b) binomial distribution
print(paste("(b) The probability that the machine produces no defective transistor in a batch of 100 is approximately ",
round(100 * pbinom(q = 0, size = 100, prob = defect), 1),
"%.",
sep = ""))
# the question can also be solved using poisson distribution, i.e. ppois(q = 0, lambda = 2) and that would give similar result
# (c) mean and sd of geometric distribution
x = 1 / defect
sd = sqrt( ((1 - defect) / defect^2) )
print(paste("(c) The expected number of transistor to be produced before the first with a defect is ",
x,
" whereas the standard deviation is ",
round(sd, 2),
sep = ""))
# (d) mean and sd of geometric distribution
new.defect = 0.05
new.x = 1 / new.defect
new.sd = sqrt( ((1 - new.defect) / new.defect^2) )
print(paste("(d) The expected number of transistor to be produced for this another machine before the first with a
defect is ",
new.x,
" whereas the standard deviation is ",
round(new.sd, 2),
sep = ""))
# (a) geometric distribution
defect = 0.02
print(paste("(a) The probability that exactly the 10th transistor is the first to defect is approximately ",
round(100 * dgeom(x = 10, prob = defect), 1),
"%.",
sep = ""))
# (b) binomial distribution
print(paste("(b) The probability that the machine produces no defective transistor in a batch of 100 is approximately ",
round(100 * pbinom(q = 0, size = 100, prob = defect), 1),
"%.",
sep = ""))
# the question can also be solved using poisson distribution, i.e. ppois(q = 0, lambda = 2) and that would give similar result
# (c) mean and sd of geometric distribution
x = 1 / defect
sd = sqrt( ((1 - defect) / defect^2) )
print(paste("(c) The expected number of transistor to be produced before the first with a defect is ",
x,
" whereas the standard deviation is ",
round(sd, 2),
sep = ""))
# (d) mean and sd of geometric distribution
new.defect = 0.05
new.x = 1 / new.defect
new.sd = sqrt( ((1 - new.defect) / new.defect^2) )
print(paste("(d) The expected number of transistor to be produced for this another machine before the first with a defect is ",
new.x,
" whereas the standard deviation is ",
round(new.sd, 2),
sep = ""))
rm(list = ls())
dbinom(x = 2, size = 3, prob = 0.51)
print(paste("(a) The probability that two of them will be boys is approximately ",
round( 100 * dbinom(x = 2, size = 3, prob = 0.51), 1 ),
"%.",
sep = ""))
# binomial distribution
m = 0.51
print(paste("(a) The probability that two of them will be boys is approximately ",
round( 100 * dbinom(x = 2, size = 3, prob = 0.51), 1 ),
"%.",
sep = ""))
?choose
choose(2, 3)
choose(3, 2)
3 * (1/.49) * (1/.51) * (1/.51)
(1/.49) * (1/.51) * (1/.51)
(1/.49)
3 * (.49) * (.51) * (.51)
# possible combo for two boys out of three children
# nCk, essentially this is the binomial coefficient
choose(3, 2)
.49 * .51 * .51
# probability for each combo
p <- .49 * .51 * .51
p * combo
# possible combo for two boys out of three children
# nCk, essentially this is the binomial coefficient
combo <- choose(3, 2)  # [boy girl boy]  [girl boy boy]  [boy boy girl]
p * combo
p * combo == dbinom(x = 2, size = 3, prob = 0.51)
p * combo
dbinom(x = 2, size = 3, prob = 0.51)
round(p * combo, 2) == round(dbinom(x = 2, size = 3, prob = 0.51), 2)
# binomial distribution
m = 0.51
print(paste("(a) The probability that two of them will be boys is approximately ",
round( 100 * dbinom(x = 2, size = 3, prob = 0.51), 1 ),
"%.",
sep = ""))
# possible combo for two boys out of three children
# nCk, essentially this is the binomial coefficient
combo <- choose(3, 2)  # [boy girl boy]  [girl boy boy]  [boy boy girl]
# probability for each combo
p <- .49 * .51 * .51
# addition rule for disjoint outcomes
round(p + p + p, 2)  # or, round(p * combo, 2)
print(paste("(b) It is ",
round(p * combo, 2) == round(dbinom(x = 2, size = 3, prob = 0.51), 2),
" that the answers from part(a) match with part(b)",
sep = ""))
# binomial distribution
# 3.38.a
m = 0.51
print(paste("(a) The probability that two of them will be boys is approximately ",
round( 100 * dbinom(x = 2, size = 3, prob = 0.51), 1 ),
"%.",
sep = ""))
# 3.38.b
# possible combo for two boys out of three children
# nCk, essentially this is the binomial coefficient
combo <- choose(3, 2)  # [boy girl boy]  [girl boy boy]  [boy boy girl]
# probability for each combo
p <- .49 * .51 * .51
# addition rule for disjoint outcomes
p.combo <- round(p + p + p, 2)  # or, round(p * combo, 2)
print(paste("(b) It is ",
round(p * combo, 2) == round(dbinom(x = 2, size = 3, prob = 0.51), 2),
" that the answers from part(a) match with part(b)",
sep = ""))
# binomial distribution
# 3.38.a
m = 0.51
print(paste("(a) The probability that two of them will be boys is approximately ",
round( 100 * dbinom(x = 2, size = 3, prob = 0.51), 1 ),
"%.",
sep = ""))
# 3.38.b
# possible combo for two boys out of three children
# nCk, essentially this is the binomial coefficient
combo <- choose(3, 2)  # [boy girl boy]  [girl boy boy]  [boy boy girl]
# probability for each combo
p <- .49 * .51 * .51
# addition rule for disjoint outcomes
p.combo <- round(p + p + p, 2)  # or, round(p * combo, 2)
print(paste("(b) It is ",
p.combo == round(dbinom(x = 2, size = 3, prob = 0.51), 2),
" that the answers from part(a) match with part(b)",
sep = ""))
dbinom(x = 3, size = 8, prob = 0.51)
dnbinom(x = 3, size = 10, prob = p)
dnbinom(x = 3, size = 10, prob = p, mu = 10(1 - p)/p)
dnbinom(x = 3, size = 10, prob = p)
dbinom(3, 10, p)
pbinom(3, 10, p)
dnbinom(x = 7, size = 3, prob = p)
dnbinom(x = 3, size = 7, prob = p)
dnbinom(x = 7, size = 3, prob = p)
dnbinom(1:25,2,0.5)
windows()
barplot(dnbinom(1:25,2,0.5), col="grey", names.arg=1:25)
dnbinom(0:25,2,0.5)
dnbinom(0,2,0.5)
dnbinom(1,2,0.5)
?dnbinom
pnbinom(x = 7, size = 3, prob = p)
pnbinom(q = 7, size = 3, prob = p)
barplot(pnbinom(1:25,2,0.5), col="grey", names.arg=1:25)
pnbinom(1:25,2,0.5)
par(mfrow = c(1, 2))
barplot(dnbinom(1:25,2,0.5), col="grey", names.arg=1:25)
barplot(pnbinom(1:25,2,0.5), col="grey", names.arg=1:25)
# negative binomial distribution
p = 0.15
print(paste("(a) The probability that on the 10th try she will make her 3rd successful serve is approximately ",
round( 100 * dnbinom(x = 7, size = 3, prob = p), 1 ),
"%.",
sep = ""))
dnbinom(x = 7, size = 3, prob = p)
