df[1][1]
df[1][1][1]
df %>% unlist
str_split("Create", "")
length(df[[1]])
unlist(df)
unlist(df) %>% length
unlist(df)[1]
str_split(unlist(df)[1])
str_split(unlist(df)[1], "")
str_split(unlist(df)[1], "")[1]
str_split(unlist(df)[1], "")[[1]]
str_split(unlist(df)[1], "")[[1]][1]
sapply(1:length(df[[1]]), function(x) {
str_split(unlist(df)[x], "")[[1]][1]
})
sapply(1:length(df[[1]]), function(x) {
str_split(unlist(df)[x], "")[[1]][1]
})
lapply(1:length(df[[1]]), function(x) {
str_split(unlist(df)[x], "")[[1]][1]
})
sapply(1:length(df[[1]]), function(x) {
str_split(unlist(df)[x], "")[[1]][1]
})
library(purrr)
ls(pos = "package:purrr")
m <- c(1, 2, 3, -4)
reduce(m, *)
reduce(m, "*")
accumulate(m, "*")
accumulate(m, "+")
m <- c(1, 2, 3, -4)
m
?accumulate
accumulate(m, `+`)
reduce(m, `*`)
palindrome <- function(s){
s <- str_replace_all(s, pattern = " ", replacement = "") %>%
str_split("") %>%
unlist
s == s[length(s):1]
}
palindrome('helleh')
library(stringr)
palindrome <- function(s){
s <- str_replace_all(s, pattern = " ", replacement = "") %>%
str_split("") %>%
unlist
s == s[length(s):1]
}
palindrome('helleh')
palindrome <- function(s){
s <- str_replace_all(s, pattern = " ", replacement = "") %>%
str_split("") %>%
unlist
all(s == s[length(s):1])
}
palindrome('helleh')
palindrome('helleh!')
map(c('helleh', 'nurses run'), palindrom)
map(c('helleh', 'nurses run'), palindrome)
map_dbl(c('helleh', 'nurses run'), palindrome)
map_dbl(c('helleh!', 'nurses run'), palindrome)
map_dbl(c('helleh', 'nurses run'), palindrome)
s <- 'I am Batman'
s <- str_to_lower(s) %>%
str_replace_all(pattern = " ", replacement = "") %>%
str_split("") %>%
unlist
s
s %in% letters
letters %in% s
all(letters %in% s)
ispangram <- function(s){
s <- str_to_lower(s) %>%
str_replace_all(pattern = " ", replacement = "") %>%
str_split("") %>%
unlist
all(letters %in% s)
}
ispangram("The quick brown fox jumps over the lazy dog")
remove.packages("httpuv")
.libPaths()
devtools::install_github("jbryer/DATA606")
df <- read.table("clipboard",
sep = '\t', comment.char = "", header = T,
stringsAsFactors = F, fill = T,
quote = "\n", allowEscapes = T
)
head(df)
df <- read.table("clipboard",
sep = '\t', comment.char = "", header = T,
stringsAsFactors = F, fill = T,
quote = "\n", allowEscapes = T
)
head(df)
length(df$value)
df
df$odds[2]
df$value[1]
for (i in 1:length(df$value)){
print( paste0("Financial Advisors are ", round(df$odds[i], 2), " more likely to be interested in ", df$value[i]) )
}
library(broom)
ls(pos = "package:broom")
?inflate
data("mtcars")
head(mtcars)
boxplot(mpg)
boxplot(mpg, data = mtcars)
boxplot(mtcars$mpg, data = mtcars)
attach(mtcars)
sapply(mtcars, unique)
?crossing
library(broom)
?crossing
boxplot(mtcars$mpg, data = mtcars)
IQR(mpg)
boxplot(mtcars$mpg ~ vs, data = mtcars)
IQR(mpg ~ vs)
sapply(c(mpg, wt), IQR)
sapply(mtcars[, c(mpg, wt)], IQR)
mtcars[, c(mpg, wt)]
mtcars[, c("mpg", "wt")]
sapply(mtcars[, c("mpg", "wt")], IQR)
sapply(mtcars[, c("mpg", "wt")], IQR)
par(mar = c(1, 2))
par(mfrow = c(1, 2))
boxplot(mpg, col = 'red')
boxplot(wt, col = 'blue')
sapply(mtcars[, c("mpg", "wt")], IQR)
sapply(mtcars, unique)
sapply(mtcars, length(unique))
sapply(mtcars, function(x) length(unique(x)))
crossing(cyl, vs)
broom::crossing(cyl, vs)
search()
?crossing
library(tidyr)
tidyr::crossing(cyl, vs)
expand.grid(cyl, vs)
dim(mtcars)
df <- expand.grid(cyl, vs)
dim(df)
head9df
head(df)
sapply(df, unique)
df$combo <- paste(df$var1, df$Var2)
head(df)
df$combo <- paste(df$Var1, df$Var2)
head(df)
sapply(df, unique)
table(df$combo)
df$combo <- paste(df$Var1, df$Var2, sep = "-")
table(df$combo)
table(cyl, vs)
sapply(mtcars, function(x) length(unique(x)))
tidyr::crossing(cyl, vs)
?crossing
?plot
library(DATA606)
shiny_demo('DualScales', package = 'DATA606')
library(rlang)
library(ggplot2)
library(ggplot2)
shiny_demo('DualScales', package = 'DATA606')
install.packages('widyr')
library(widyr)
?pairwise_similarity
?inner_join
data(breslow.dat, package = "robust")
install.packages("robust"); library(robust)
data(breslow.dat, package = "robust")
attach(brewslow.dat)
fit <- glm(SumY ~ Base + Age + Trt, data = brewslow.dat, family = poisson())
summary(fit)
attach(brewslow.dat)
data(breslow.dat, package = "robust")
ls()
head(breslow.dat)
attach(breslow.dat)
fit <- glm(SumY ~ Base + Age + Trt, data = breslow.dat, family = poisson())
summary(fit)
fit <- glm(sumY ~ Base + Age + Trt, data = breslow.dat, family = poisson())
summary(fit)
?predict
?base::predict
summary(breslow.dat)
summary(breslow.dat)
head(breslow.dat)
ob <- data.frame(Base = c(22, 41), Age = c(30, 40), Trt = c("placebo", "progabide"))
predict(fit, ob)
ob <- data.frame(Base = c(20, 20), Age = c(30, 40), Trt = c("placebo", "progabide"))
predict(fit, ob)
exp(coef(fit))
1.023 ^ 10
ob <- data.frame(Base = c(20, 20), Age = c(30, 40), Trt = c("placebo", "placebo"))
predict(fit, ob)
1.0229102 ^ 20 + 1.0230007 ^ 40 + 0.8583864
(1.0229102 ^ 20) * (1.0230007 ^ 40) * 0.8583864
(1.0229102 ^ 20) * (1.0230007 ^ 40) * 1 / 0.8583864
(1.0229102 ^ 20) * (1.0230007 ^ 40) * 1
ob <- data.frame(Base = c(20, 20), Age = c(30, 40), Trt = c("progabide", "progabide"))
predict(fit, ob)
(1.0229102 ^ 20) * (1.0230007 ^ 40) * 0.8583864
(1.0229102 ^ 20) + (1.0230007 ^ 40) + 0.8583864
ob <- data.frame(Base = c(20, 20), Age = c(30, 40), Trt = c("progabide", "progabide"))
predict(fit, ob)
exp(coef(fit))
7.0204403 * (1.0229102 ^ 20) * (1.0230007 ^ 40) * 0.8583864
exp(predict(fit, ob))
exp(0.8583864)
coef(fit)
exp(1.94882593 * (0.02265174 ^ 20) * (0.02274013 ^ 40) * -0.15270095)
1.94882593 * (0.02265174 ^ 20) * (0.02274013 ^ 40) * -0.15270095
exp(1.94882593 * (0.02265174 ^ 20) * (0.02274013 ^ 40) * -0.15270095)
exp(1.94882593) * exp(0.02265174 ^ 20) * exp(0.02274013 ^ 40) * exp(-0.15270095)
exp(1.94882593 * (0.02265174 ^ 20) * (0.02274013 ^ 40) * -0.15270095)
7.0204403 * (1.0229102 ^ 20) * (1.0230007 ^ 40) * 0.8583864
exp(predict(fit, ob))
7.0204403 * (1.0229102 ^ 20) * (1.0230007 ^ 40) * 0.8583864
ob <- data.frame(Base = c(20, 20), Age = c(30, 30), Trt = c("placebo", "progabide"))
exp(predict(fit, ob))
(21.84 - 18.75) / 21.84
library(tidyverse)
library(Rcpp)
library(dplyr)
update.packages()
library(DATA606)
library(tidyverse)
update.packages()
quit
quit()
library(tidyverse)
remove.packages("Rcpp")
install.packages("Rcpp")
library(tidyverse)
library(DATA606)
install.packages("digest")
library(DATA606)
library(dplyr)
remove.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("Rcpp",  dependencies = TRUE, repos = "http://cran.us.r-project.org")
install.packages("Rcpp", dependencies = TRUE, repos = "http://cran.us.r-project.org")
install.packages("yaml", dependencies = T)
library(dplyr)
install.packages("purrr")
library(purrr)
library(dplyr)
ls(pos = "package:dplyr")
library(dplyr)
library(DATA606)
install.packages("later")
library(DATA606)
library(Rcpp)
library(DATA606)
install.packages("later")
install.packages("later", dependencies = T)
install.packages("later", dependencies = T, TRUE)
install.packages("installr") # install
install.packages("installr") # install
installr::updateR(T) # updating R.
quit()
install.packages(c("bigrquery", "mailR"))
library(c("bigrquery", "mailR"))
library(bigrquery)
library(mailR)
## load packages
if(!require(bigrquery)){install.packages("bigrquery"); require(bigrquery)}
if(!require(rmarkdown)){install.packages("rmarkdown"); require(rmarkdown)}
if(!require(knitr)){install.packages("knitr"); require(knitr)}
if(!require(mailR)){install.packages("mailR"); require(mailR)}
if(!require(lubridate)){install.packages("lubridate"); require(lubridate)}
if(!require(dplyr)){install.packages("dplyr"); require(dplyr)}
if(!require(ggplot2)){install.packages("ggplot2"); require(ggplot2)}
if(!require(stringr)){install.packages("stringr"); require(stringr)}
if(!require(purrr)){install.packages("purrr"); require(purrr)}
if(!require(rlang)){install.packages("rlang"); require(rlang)}
# Big Query arguments
projectId <- "media-data-science"
dataset_staging <- "Jim_Story_Staging"
dataset_production <- "Jim_Story_Production"
dataset_audit <- "Jim_Story_Audit"
check_audit_a_query <- "
select max_date as last_entry_time
, sys_run_time as last_run_sys_time
, DATE_ADD(CURRENT_DATE(), 0, 'DAY') as current_run_time
, flag
from [media-data-science:Jim_Story_Audit.audit_a]
where job_number = (select max(job_number) from [media-data-science:Jim_Story_Audit.audit_a] where flag = 1)
"
# write query and save result
audit_a_maxdate <- query_exec(query = check_audit_a_query,
project = projectId,
use_legacy_sql = T)
# Big Query arguments
projectId <- "media-data-science"
dataset_staging <- "Jim_Story_Staging"
dataset_production <- "Jim_Story_Production"
dataset_audit <- "Jim_Story_Audit"
check_audit_a_query <- "
select max_date as last_entry_time
, sys_run_time as last_run_sys_time
, DATE_ADD(CURRENT_DATE(), 0, 'DAY') as current_run_time
, flag
from [media-data-science:Jim_Story_Audit.audit_a]
where job_number = (select max(job_number) from [media-data-science:Jim_Story_Audit.audit_a] where flag = 1)
"
# write query and save result
audit_a_maxdate <- query_exec(query = check_audit_a_query,
project = projectId,
use_legacy_sql = T)
ls(pos = "package:bigrquery")
red_flag2 <- query_exec(query = "select flag from [media-data-science:Jim_Story_Audit.audit_a]
where job_number = (select max(job_number) from [media-data-science:Jim_Story_Audit.audit_a])",
project = projectId,
use_legacy_sql = T) %>%
as.integer
set_access_cred(NULL)
get_access_cred()
setwd("C:/Users/traveler/Desktop/SPS/606_Statistics and Probability/homework/ch8")
(-1.93 * 1) + 120.07
y-actual = 2
y-hat = (-9.11 * 0) + (3.1 * 1) + (2.15 * 1) + 18.93
residual = y-actual - y-hat
## Question 8.4
(a) equation: y = (-9.11 * x1) + (3.1 * x2) + (2.15 * x3) + 18.93
(b) the estimate of eth is negative, meaning the ethnic background (1 = not aboriginal) would have negative impact of average number of days absent by 9.11. That means they will have less number of absence by 9.11; sex is positive, meaning (1 = male) boys will be more likely to have more days of absence by 3.1; and finally, lrn (1 = slow learner) is also positive, meaning slow learner will be more likely to have 2.15 more days of absence.
(c) plug this in the above equation:
y-actual = 2
y-hat = (-9.11 * 0) + (3.1 * 1) + (2.15 * 1) + 18.93
residual = y-actual - y-hat
y-actual = 2
(-9.11 * 0) + (3.1 * 1) + (2.15 * 1) + 18.93
2 - (-9.11 * 0) + (3.1 * 1) + (2.15 * 1) + 18.93
(-9.11 * 0) + (3.1 * 1) + (2.15 * 1) + 18.93
2 - 24.18
1 - (240.57 / 264.17)
(240.57 / 264.17)
(1 - (240.57 / 264.17))^2
sqrt(1 - (240.57 / 264.17))
1 - (240.57 / 264.17)
n = 146; k = 3
((n - 1) / (n - k - 1))
1 - ( (240.57 / 264.17) * ((n - 1) / (n - k - 1)) )
exp
exp()
exp(1)
b0 = 11.6630
x1 = 53
x2 = 81
b1 = -0.2162
exp(1)^(b0 + b1 * x1) / (1 + exp(1)^(b0 + b1 * x1))
b0 = 11.6630
x1 = 53
x2 = 81
b1 = -0.2162
exp(1)^(b0 + b1 * x1) / (1 + exp(1)^(b0 + b1 * x1))
exp(1)^(b0 + b1 * x2) / (1 + exp(1)^(b0 + b1 * x2))
round(100 * exp(1)^(b0 + b1 * x1) / (1 + exp(1)^(b0 + b1 * x1)), 1)
knitr::opts_chunk$set(echo = TRUE)
b0 = 11.6630
x1 = 53
x2 = 81
b1 = -0.2162
print(paste("the chance of O-rings damange with temperature 53F is approximately ",
round(100 * exp(1)^(b0 + b1 * x1) / (1 + exp(1)^(b0 + b1 * x1)), 1),
"%.",
sep = ""))
print(paste("the chance of O-rings damange with temperature 81F is approximately ",
round(100 * exp(1)^(b0 + b1 * x2) / (1 + exp(1)^(b0 + b1 * x2)), 1),
"%.",
sep = ""))
## Question 8.18
(a)
round( exp(1)^(b0 + b1 * x1) / (1 + exp(1)^(b0 + b1 * x1)), 2 )
round( exp(1)^(b0 + b1 * x1) / (1 + exp(1)^(b0 + b1 * x1)), 2 )
x3 = 71
print(paste("the chance of O-rings damange with temperature 55F is approximately ",
round(100 * exp(1)^(b0 + b1 * x3) / (1 + exp(1)^(b0 + b1 * x3)), 1),
"%.",
sep = ""))
b0 = 11.6630
b1 = -0.2162
x1 = 51
x2 = 53
x3 = 55
print(paste("the chance of O-rings damange with temperature 51F is approximately ",
round(100 * exp(1)^(b0 + b1 * x1) / (1 + exp(1)^(b0 + b1 * x1)), 1),
"%.",
sep = ""))
print(paste("the chance of O-rings damange with temperature 53F is approximately ",
round(100 * exp(1)^(b0 + b1 * x2) / (1 + exp(1)^(b0 + b1 * x2)), 1),
"%.",
sep = ""))
print(paste("the chance of O-rings damange with temperature 55F is approximately ",
round(100 * exp(1)^(b0 + b1 * x3) / (1 + exp(1)^(b0 + b1 * x3)), 1),
"%.",
sep = ""))
b0 = 11.6630
b1 = -0.2162
x1 = 51
x2 = 53
x3 = 55
print(paste("the chance of O-rings damange with temperature 51F is approximately ",
round(100 * exp(1)^(b0 + b1 * x1) / (1 + exp(1)^(b0 + b1 * x1)), 1),
"%.",
sep = ""))
print(paste("the chance of O-rings damange with temperature 53F is approximately ",
round(100 * exp(1)^(b0 + b1 * x2) / (1 + exp(1)^(b0 + b1 * x2)), 1),
"%.",
sep = ""))
print(paste("the chance of O-rings damange with temperature 55F is approximately ",
round(100 * exp(1)^(b0 + b1 * x3) / (1 + exp(1)^(b0 + b1 * x3)), 1),
"%.",
sep = ""))
temp <- c(51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71)
p <- c(0.654, 0.551, 0.443, 0.341, 0.251, 0.179, 0.124, 0.084, 0.056, 0.037, 0.024)
df <- data.frame(temp, p)
df
windows()
with(df,
plot(temp, p))
with(df,
plot(temp, p, type = "line"))
with(df,
plot(temp, p))
with(df,
plot(temp, p, type = "line",
lty = 1,
col = "red"))
with(df,
plot(temp, p))
with(df,
plot(temp, p, type = "lines",
lty = 3,
col = "red"))
?plot
with(df,
plot(temp, p,
type = "p",
col = "dark blue",
size = 2))
with(df,
plot(temp, p,
type = "p",
col = "dark blue",
cex = 2))
with(df,
plot(temp, p, type = "l",
lty = 3,
col = "red"))
?lines
with(df,
plot(temp, p,
type = "p",
col = "dark blue",
cex = 2))
with(df,
lines(temp, p, type = "l",
lty = 3,
col = "red"))
?plot
temp <- c(51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71)
p <- c(0.654, 0.551, 0.443, 0.341, 0.251, 0.179, 0.124, 0.084, 0.056, 0.037, 0.024)
df <- data.frame(temp, p)
with(df,
plot(temp, p,
type = "p",
col = "dark blue",
cex = 2,
xlab = "Temperature (Fahrenheit)",
ylab = "Probability of damage"))
with(df,
lines(temp, p, type = "l",
lty = 3,
col = "red"))
temp <- c(51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71)
p <- c(0.654, 0.551, 0.443, 0.341, 0.251, 0.179, 0.124, 0.084, 0.056, 0.037, 0.024)
df <- data.frame(temp, p)
with(df,
plot(temp, p,
type = "p",
col = "dark blue",
cex = 2,
xlab = "Temperature (Fahrenheit)",
ylab = "Probability of damage"))
with(df,
lines(temp, p, type = "l",
lty = 3,
col = "red"))
temp <- c(51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71)
p <- c(0.654, 0.551, 0.443, 0.341, 0.251, 0.179, 0.124, 0.084, 0.056, 0.037, 0.024)
df <- data.frame(temp, p)
with(df,
plot(temp, p,
type = "p",
col = "dark blue",
cex = 2,
xlab = "Temperature (Fahrenheit)",
ylab = "Probability of damage"))
with(df,
lines(temp, p, type = "l",
lty = 3,
col = "dark red"))
quit
quit(0)
